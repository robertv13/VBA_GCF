'@Folder("Rapport_BV")

Option Explicit

Private Sub Worksheet_Activate()

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshGL_BV:Worksheet_Activate", "", 0)

    Call RafraichirActivite("Balance de vérification")
    
    DoEvents
    
    'Import transactions from MASTER file
    Call modImport.ImporterGLTransactions

    'Set the zoom factor to 95% when this worksheet is activated
    If Not ActiveWindow Is Nothing Then ActiveWindow.Zoom = 95
    
    Me.Application.Calculation = xlCalculationAutomatic
    
    Dim ws As Worksheet: Set ws = wshGL_BV

    'Clear the display area & display the account number & description
    Application.EnableEvents = False
    With ws
        .Range("T2").Value = "Mois"
        .Range("B6").Value = ""
        .Range("B7").Value = ""
        Call GL_BV_EffacerZoneBV(ws)
        Call GL_BV_EffacerZoneTransactionsDetaillees(ws)
    End With
    
    Dim cbx As Shape
    For Each cbx In ws.Shapes
        If InStr(cbx.Name, "GL_Trans") Or cbx.Name = "shpRetour" Then
            cbx.Delete
        End If
    Next cbx

    With ws
        .Range("J1").Value = Format$(Date, wsdADMIN.Range("B1").Value)
        .Range("J1").Select
        gPreviousCellAddress = .Range("J1").Address
    End With
    
    Application.EnableEvents = True
    
    'Libérer la mémoire
    Set cbx = Nothing
    Set ws = Nothing
    
    Call Log_Record("wshGL_BV:Worksheet_Activate", "", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Call RafraichirActivite("Balance de vérification")
    
    If Not dynamicShape Is Nothing Then
        On Error Resume Next
        If dynamicShape.Visible = True Then
            dynamicShape.Visible = False
        End If
        On Error GoTo 0
    End If
    
    If gPreviousCellAddress <> "" Then
        Range(gPreviousCellAddress).Interior.Color = xlNone
    End If

    'Date selected
    If Not Intersect(Target, wshGL_BV.Range("J1")) Is Nothing Then
        Target.Interior.Color = COULEUR_SAISIE
    End If
    
    'An account, description, debit or credit has been selected from TB
    Dim lastUsedAccount As Long
    lastUsedAccount = wshGL_BV.Cells(wshGL_BV.Rows.count, "D").End(xlUp).row
    If lastUsedAccount > 5 Then
        If Not Intersect(Target, wshGL_BV.Range("D4:G" & lastUsedAccount - 2)) Is Nothing Then
            If Target.CountLarge > 1 Then Exit Sub
            Call GL_BV_EffacerZoneTransactionsDetaillees(wshGL_BV)
    '        Call GL_BV_Effacer_Zone_Et_Shape
            Dim GLAcct As String, GLDescription As String, dateLimite As Date
            GLAcct = CStr(Range("D" & Target.row).Value)
            GLDescription = Range("E" & Target.row).Value
            Application.EnableEvents = False
            wshGL_BV.Range("B6").Value = GLAcct
            wshGL_BV.Range("B7").Value = GLDescription
            dateLimite = Format$(Range("J1").Value, wsdADMIN.Range("B1").Value)
            wshGL_BV.Range("B9").Value = Format$(dateLimite, wsdADMIN.Range("B1").Value)
            Application.EnableEvents = True
            
    '        wshGL_BV.Range("T2").value = "Mois"
'            DoEvents
            
            'Display all transactions for the selected G/L
            Call GL_BV_Display_Trans_For_Selected_Account(GLAcct, GLDescription, wshGL_BV.Range("B8").Value, dateLimite)
        End If
    End If
    
    'Get the entire transaction, from a selected line
    If Not Intersect(Target, wshGL_BV.Range("M4:T9999")) Is Nothing And _
        Target.Cells.count = 1 And _
        wshGL_BV.Range("M" & Target.row) <> "" Then
            Dim noJE As Long
            noJE = wshGL_BV.Range("N" & Target.row).Value
            Application.EnableEvents = False
            wshGL_BV.Range("B10").Value = Target.row
            Application.EnableEvents = True
            Call GL_Get_JE_Detail_Trans_AF(noJE)
            Call GL_BV_Display_JE_Trans_With_Shape
    Else
        Application.EnableEvents = False
        wshGL_BV.Range("B10").Value = 0
        Application.EnableEvents = True
        Dim shp As Shape
        On Error Resume Next
            Set shp = wshGL_BV.Shapes("JE_Detail_Trans")
        On Error GoTo 0
        If shp Is Nothing Then
            Set shp = wshGL_BV.Shapes.AddShape(msoShapeRoundedRectangle, 50, 50, 100, 50)
            shp.Name = "JE_Detail_Trans"
        End If
        Set shp = wshGL_BV.Shapes("JE_Detail_Trans")
        shp.Visible = msoFalse
    End If
    
'    'Vérifier si le curseur est en dehors de la zone
'    If Not Intersect(Target, rngDetailTrans) Is Nothing Then
'        'Si un bouton existe, l'effacer
'        Dim btn As Shape
'        On Error Resume Next
'        Set btn = Me.Shapes("EffacerBouton")
'        If Not btn Is Nothing Then btn.Delete
'        On Error GoTo 0
'
'        'Effacer la zone des résultats
'        rngDetailTrans.Clear
'
'        'Ramener le focus à C4
'        Application.EnableEvents = False
'        Me.Range("C4").Select
'        Application.EnableEvents = True
'    End If
    
    'Libérer la mémoire
'    Set rngBV = Nothing
'    Set rngDetailTrans = Nothing
'    Set rngZonesSensibles = Nothing

    'Libérer la mémoire
    Set shp = Nothing
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range) 'Worksheet wshBV - 2023-12-31

    Dim fullDate As Variant
    
    'Changement de date de BV
    If Not Intersect(Target, Range("J1")) Is Nothing Then 'Cut-off date has changed
        'Temporarily disable events to prevent infinite loop
        Application.EnableEvents = False
        
       'Try to convert the input to a complete valid date
        fullDate = Fn_Complete_Date(Target.Value, 999, 15)
       
        'Update the cell with the full date, if valid
        If fullDate <> "Invalid Date" Then
            Target.Value = Format$(fullDate, wsdADMIN.Range("B1").Value)
        Else
            Call modTEC_Saisie.AfficherMessageDateInvalide("wshGL_BV_139")
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.GoTo Range(Target.Address)
        End If
        
        Range("B8").Value = DateSerial(year(Range("J1").Value), month(Range("J1").Value), 1)
        Range("B9").Value = Format$(Range("J1").Value, wsdADMIN.Range("B1").Value)
        
        Dim ws As Worksheet
        Set ws = wshGL_BV
        
        Application.EnableEvents = True
    End If

    'Changement des dates pour la période à imprimer
    If Not Intersect(Target, Range("T2")) Is Nothing Then
        If Range("T2").Value <> "" Then
            Dim dateMin As Date, dateMax As Date
            dateMax = Range("J1").Value
            Dim periode As String
            periode = Target.Value
            
            Select Case periode
                Case "Mois"
                    dateMin = DateSerial(year(dateMax), month(dateMax), 1)
                Case "Trimestre"
                    dateMin = PremierJourTrimestreFiscal(dateMax)
                Case "Année Financière"
                    dateMin = PremierJourAnneeFiscal(dateMax)
                Case "Toutes les dates"
                    dateMin = DateSerial(2024, 7, 31)
            End Select
            
            'Ajuste l'entête de la section
            Application.EnableEvents = False
            Range("L2").Value = "Du " & Format$(dateMin, wsdADMIN.Range("B1").Value) & " au " & Format$(dateMax, wsdADMIN.Range("B1").Value)
            Range("B8").Value = dateMin
            Application.EnableEvents = True
            'Force redisplay of GL Transactions details
            If Range("B6").Value <> "" Then
                Call GL_BV_Display_Trans_For_Selected_Account(Range("B6").Value, Range("B7").Value, _
                                                              Range("B8").Value, Range("B9").Value)
            End If
        End If
    End If
    
Clean_Exit:

    Application.EnableEvents = True

End Sub

