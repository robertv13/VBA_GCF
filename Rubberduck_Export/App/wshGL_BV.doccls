Option Explicit

Public dynamicShape As Shape
Public previousCellAddress As Variant

Private Sub Worksheet_Activate()

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshGL_BV:Worksheet_Activate", 0)

    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    'Import transactions from MASTER file
    Call GL_Trans_Import_All

    'Set the zoom factor to 95% when this worksheet is activated
    ActiveWindow.Zoom = 95

    Me.Application.Calculation = xlCalculationAutomatic
    
    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("GL_BV")

'    Call SetTabOrder(ws)
    
    'Clear the display area & display the account number & description
    Application.EnableEvents = False
    
    With ws
        .Unprotect
        .Range("L4:T9999").ClearContents
        .Protect UserInterfaceOnly:=True
        .EnableSelection = xlUnlockedCells
        .Range("B10").value = 0
    End With
    
    Dim cbx As Shape
    For Each cbx In wshGL_BV.Shapes
        If InStr(cbx.name, "GL_Trans") Then
            cbx.Delete
        End If
    Next cbx

    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    ws.Range("J1").value = ""
    
    With ws
        .Range("J1").Select
        previousCellAddress = .Range("J1").Address
    End With
    
    'Libérer la mémoire
    Set cbx = Nothing
    Set ws = Nothing
    
    Call Log_Record("wshGL_BV:Worksheet_Activate", startTime)

End Sub

Private Sub Worksheet_Deactivate()

    On Error Resume Next
    If Not dynamicShape Is Nothing Then
        dynamicShape.Visible = False
    End If
    On Error GoTo 0

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Not dynamicShape Is Nothing Then
        If dynamicShape.Visible = True Then dynamicShape.Visible = False
    End If
    
    If previousCellAddress <> "" Then
        Range(previousCellAddress).Interior.Color = xlNone
    End If

    'Date selected
    If Not Intersect(Target, wshGL_BV.Range("J1")) Is Nothing Then
    ''        If wshGL_BV.Range("J1").value = "" Then
    ''            Target.value = Format(Now(), "dd/mm/yyyy")
    ''        End If
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'An account has been selected from Trial Balance
    If Not Intersect(Target, wshGL_BV.Range("D4:G" & Range("B2").value - 2)) Is Nothing Then
        If Target.CountLarge > 1 Then Exit Sub
        Application.EnableEvents = False
        Dim GLAcct As String, GLDescription As String, DateLimite As Date
        GLAcct = CStr(Range("D" & Target.row).value)
        GLDescription = Range("E" & Target.row).value
        DateLimite = Format$(Range("J1").value, wshAdmin.Range("B1").value)
        wshGL_BV.Range("B10").value = 0
        Range("T2").value = "Toutes les dates"
        'Display all transactions for the selected G/L
        Call GL_TB_Display_Trans_For_Selected_Account(GLAcct, GLDescription, #7/31/2024#, DateLimite)
        Application.EnableEvents = True
    End If
    
    'Get the entire transaction, from a selected line
    If Not Intersect(Target, wshGL_BV.Range("M5:T9999")) Is Nothing And _
        Target.Cells.count = 1 And _
        wshGL_BV.Range("M" & Target.row) <> "" Then
            Dim noJE As Long
            noJE = wshGL_BV.Range("N" & Target.row).value
            Application.EnableEvents = False
            wshGL_BV.Range("B10").value = Target.row
            Application.EnableEvents = True
            Call wshGL_BV_Get_An_JE_Detail_Trans(noJE)
            Call wshGL_BV_Display_JE_Trans_With_Shape
    Else
        wshGL_BV.Range("B10").value = 0
        Dim shp As Shape: Set shp = wshGL_BV.Shapes("JE_Detail_Trans")
        shp.Visible = msoFalse

    End If
    
    'Libérer la mémoire
    Set shp = Nothing
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range) 'Worksheet wshBV - 2023-12-31

    Dim fullDate As Variant
    
    If Not Intersect(Target, Range("J1")) Is Nothing Then 'Cut-off date has changed
        'Temporarily disable events to prevent infinite loop
        Application.EnableEvents = False
        
       'Try to convert the input to a complete valid date
        fullDate = Fn_Complete_Date(Target.value, 999, 15)
       
        'Update the cell with the full date, if valid
        If fullDate <> "Invalid Date" Then
            Target.value = Format$(fullDate, wshAdmin.Range("B1").value)
        Else
            Call MsgBoxInvalidDate("wshGL_BV_139")
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.Goto Range(Target.Address)
        End If
        
        Range("B9").value = Range("J1").value
        Range("L2").value = ""
        
        Call GL_TB_Build_Trial_Balance 'Automatically recalculate Trial Balance
        
        Application.EnableEvents = True
    End If

    If Not Intersect(Target, Range("T2")) Is Nothing Then 'Dates have changed
        Application.EnableEvents = False
        
        Call GL_TB_Determine_From_And_To_Date(Range("T2").value)
                
        'Force redisplay of GL Transactions details
        Call GL_TB_Display_Trans_For_Selected_Account(Range("B6").value, Range("B7").value, _
            Format$(Range("B8").value, wshAdmin.Range("B1").value), _
            Format$(Range("B9").value, wshAdmin.Range("B1").value))
    End If
    
Clean_Exit:

        Application.EnableEvents = True

End Sub

Sub wshGL_BV_Get_An_JE_Detail_Trans(no As Long)

'    Sub GL_TB_AdvancedFilter_By_GL(GLNo As String, minDate As Date, maxDate As Date)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshGL_BV:wshGL_BV_Get_An_JE_Detail_Trans", 0)

    With wshGL_Trans
        Dim rgResult As Range, rgData As Range, rgCriteria As Range, rgCopyToRange As Range
        Set rgResult = .Range("AC1").CurrentRegion.Offset(1, 0)
        rgResult.ClearContents
        Set rgData = .Range("A1").CurrentRegion
        .Range("AA3").value = no
        
        Set rgCriteria = .Range("AA2:AA3")
        Set rgCopyToRange = .Range("AC1:AJ1")
        
        rgData.AdvancedFilter xlFilterCopy, rgCriteria, rgCopyToRange
        
        Dim lastResultUsedRow
        lastResultUsedRow = .Range("AC999").End(xlUp).row
        If lastResultUsedRow < 3 Then GoTo NoSort
        With .Sort
            .SortFields.Clear
            .SortFields.Add key:=wshGL_Trans.Range("AF1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On GLNo
            .SortFields.Add key:=wshGL_Trans.Range("AH1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlDescending, _
                DataOption:=xlSortNormal 'Sort Based On Date
            .SetRange wshGL_Trans.Range("AC2:AJ" & lastResultUsedRow) 'Set Range
            .Apply 'Apply Sort
         End With
    End With

NoSort:

    'Libérer la mémoire
    Set rgCriteria = Nothing
    Set rgCopyToRange = Nothing
    Set rgData = Nothing
    Set rgResult = Nothing
    
    Call Log_Record("wshGL_BV:wshGL_BV_Get_An_JE_Detail_Trans", startTime)

End Sub

Sub wshGL_BV_Display_JE_Trans_With_Shape()

    Call wshGL_BV_Create_Dynamic_Shape
    Call wshGL_BV_Adjust_The_Shape
    Call wshGL_BV_Show_Dynamic_Shape
    
End Sub

Sub wshGL_BV_Create_Dynamic_Shape()

'    'Check if the shape has already been created
'    If dynamicShape Is Nothing Then
'        'Create the text box shape
'        Me.Unprotect
'        Set dynamicShape = wshGL_BV.Shapes.AddShape(msoShapeRoundedRectangle, 2000, 100, 600, 100)
'    End If
'
'    'Libérer la mémoire
'    Set dynamicShape = Nothing
    
End Sub

Sub wshGL_BV_Adjust_The_Shape()

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshGL_BV:wshGL_BV_Adjust_The_Shape", 0)
    
    Dim lastResultRow As Long
    lastResultRow = wshGL_Trans.Range("AC999").End(xlUp).row
    If lastResultRow < 2 Then Exit Sub
    
    Dim rowSelected As Long
    rowSelected = wshGL_BV.Range("B10").value
    
    Dim texteOneLine As String, texteFull As String
    
    Dim i As Long, maxLength As Long
    With wshGL_Trans
        For i = 2 To lastResultRow
'                If Len(.Range("AD2").value) > maxLength Then
'                    maxLength = Len(.Range("AD2").value)
'                End If
            If i = 2 Then
                texteFull = "Entrée #: " & .Range("AC2").value & vbCrLf
                texteFull = texteFull & "Desc    : " & .Range("AD2").value & vbCrLf
                If Trim(.Range("AE2").value) <> "" Then
                    texteFull = texteFull & "Source  : " & .Range("AE2").value & vbCrLf & vbCrLf
                Else
                    texteFull = texteFull & vbCrLf
                End If
            End If
            texteOneLine = Fn_Pad_A_String(.Range("AF" & i).value, " ", 5, "R") & _
                            " - " & Fn_Pad_A_String(.Range("AG" & i).value, " ", 35, "R") & _
                            "  " & Fn_Pad_A_String(Format$(.Range("AH" & i).value, "#,##0.00 $"), " ", 14, "L") & _
                            "  " & Fn_Pad_A_String(Format$(.Range("AI" & i).value, "#,##0.00 $"), " ", 14, "L")
            If Trim(.Range("AF" & i).value) = Trim(wshGL_BV.Range("B6").value) Then
                texteOneLine = " * " & texteOneLine
            Else
                texteOneLine = "   " & texteOneLine
            End If
            texteOneLine = Fn_Pad_A_String(texteOneLine, " ", 79, "R")
            If Trim(.Range("AJ" & i).value) <> "" Then
                texteOneLine = texteOneLine & Trim(.Range("AJ" & i).value)
            End If
            If Len(texteOneLine) > maxLength Then
                maxLength = Len(texteOneLine)
                Debug.Print i & " = " & maxLength
            End If
            texteFull = texteFull & texteOneLine & vbCrLf
        Next i
    End With
    If Right(texteFull, Len(texteFull) - 1) = vbCrLf Then
        texteFull = Left(texteFull, Len(texteFull) - 2)
    End If
    
    Dim dynamicShape As Shape: Set dynamicShape = wshGL_BV.Shapes("JE_Detail_Trans")

    'Set shape properties
    With dynamicShape
        .Fill.ForeColor.RGB = RGB(249, 255, 229)
        .Line.Weight = 2
        .Line.ForeColor.RGB = vbBlue
        .TextFrame.Characters.Text = texteFull
        .TextFrame.Characters.Font.Color = vbBlack
        .TextFrame.Characters.Font.name = "Consolas"
        .TextFrame.Characters.Font.size = 11
        .TextFrame.MarginLeft = 4
        .TextFrame.MarginRight = 4
        .TextFrame.MarginTop = 3
        .TextFrame.MarginBottom = 3
        If maxLength < 80 Then maxLength = 80
        .width = ((maxLength * 6.7))
'            .Height = ((lastResultRow + 4) * 12) + 3 + 3
        .TextFrame2.AutoSize = msoAutoSizeShapeToFitText
        .Left = wshGL_BV.Range("N" & rowSelected).Left + 4
        .Top = wshGL_BV.Range("N" & rowSelected + 1).Top + 4
    End With
        
    'Libérer la mémoire
    Set dynamicShape = Nothing
      
    Call Log_Record("wshGL_BV:wshGL_BV_Adjust_The_Shape", startTime)
      
End Sub

Sub wshGL_BV_Show_Dynamic_Shape()

    Dim shp As Shape: Set shp = wshGL_BV.Shapes("JE_Detail_Trans")
    shp.Visible = msoTrue
    
'    If Not dynamicShape Is Nothing Then
'        dynamicShape.Visible = True
'    End If

    'Libérer la mémoire
    Set shp = Nothing
    
End Sub

Sub wshGL_BV_Hide_Dynamic_Shape()

    If Not dynamicShape Is Nothing Then
        dynamicShape.Visible = False
    End If
    
End Sub

