'Option Explicit
'
'Public previousCellAddress As Variant
'
'Private Sub Worksheet_Activate()
'
'    startTime = Timer: Call Log_Record("wshFAC_Confirmation:Worksheet_Activate", 0)
'
'    If fromMenu = False Then
'        Exit Sub
'    End If
'
'    fromMenu = False
'
'    Application.EnableEvents = False
'
'    Call TEC_Import_All
'    Call FAC_Entête_Import_All
'    Call FAC_Détails_Import_All
'    Call FAC_Sommaire_Taux_Import_All
'    Call GL_Trans_Import_All
'
'    Dim ws As Worksheet: Set ws = wshFAC_Confirmation
'
'    'Si la feuille est masquée, la rendre visible
'    If ws.Visible = xlSheetHidden Or ws.Visible = xlSheetVeryHidden Then
'        ws.Visible = xlSheetVisible
'    End If
'
'    'Set the zoom factor to 100% when this worksheet is activated
'    ActiveWindow.Zoom = 100
'
'    Me.Application.Calculation = xlCalculationAutomatic
'
'    On Error Resume Next
'    ws.Range("A:B").EntireColumn.Hidden = True
'    On Error GoTo 0
'
'    Dim lastRow As Long
'    lastRow = ws.Cells(ws.Rows.count, "P").End(xlUp).row
'    Dim r As Range
'    Set r = ws.Range("P4:P" & lastRow)
'    On Error Resume Next
'    r.Locked = True
'    On Error GoTo 0
'
'    'Protéger la feuille sans mot de passe et permettre la sélection des cellules verrouillées et non verrouillées
'    With ws
'        .Protect UserInterfaceOnly:=True
'        .EnableSelection = xlUnlockedCells
'    End With
'
'    Call SetTabOrder(ws)
'
'    'Hide the CONFIRM and OK buttons
'    ws.Shapes("shpConfirmerFacture").Visible = False
'    ws.Shapes("shpOK").Visible = False
'
'    ws.Activate
'
'    previousCellAddress = ws.Range("F5").Address
'    Call NettoyerCellulesEtIconesPDF
'
'    ws.Range("F5").Value = ""
'    ws.Range("F5").Select
'
'    Application.EnableEvents = True
'
'    'Libérer la mémoire
'    Set r = Nothing
'    Set ws = Nothing
'
'    Call Log_Record("wshFAC_Confirmation:Worksheet_Activate","", startTime)
'
'End Sub
'
'Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'
'    If previousCellAddress <> "" Then
'        Range(previousCellAddress).Interior.Color = xlNone
'    End If
'
'    'Le client a été sélectionné
'    If Not Intersect(Target, Range("F5:J5")) Is Nothing Then
'        Target.Interior.Color = COULEUR_SAISIE
'    End If
'
'    'Invoice Number is selected
'    If Not Intersect(Target, Range("L5")) Is Nothing And Target.Cells.count = 1 Then
'        Target.Interior.Color = COULEUR_SAISIE
'    End If
'
'    'Invoice Number is selected from Invoices to be confirmed
'    If Not Intersect(Target, Me.Columns(16)) Is Nothing Then
'        If Target.Cells.count = 1 And Target.Value <> "" Then
'            Call NettoyerCellulesEtIconesPDF
'            Call TraiterToutesLesFacturesAC(Target.Value)
'            wshFAC_Confirmation.Range("L5").Value = Target.Value
'            Target.Interior.Color = COULEUR_SAISIE
'        End If
'    End If
'
'    'Save the current cell Address
'    previousCellAddress = Target.Address
'
'End Sub
'
'Private Sub Worksheet_Change(ByVal Target As Range)
'
'    Debug.Print "#010 - Worksheet_Change Event - " & Target.Address & " = " & Target.Value
'
'    Dim rng As Range
'
'    'Le nom de client a changé
'    If Not Intersect(Target, Me.Range("F5")) Is Nothing Then
''        Call FAC_Confirmation_Client_Change(Target.Value)
'        Set rng = Me.Range("L5")
'    End If
'
''        'Aller chercher le vrai nom du client
''        Dim allCols As Variant
''        allCols = ObtenirToutesColonnesPourUneValeur("BD_Clients", Target.Value, fClntFMNomClientPlusNomClientSystème)
''        'Vérifier les résultats
''        If IsArray(allCols) Then
''            Application.EnableEvents = False
''            Target.Value = allCols(1)
''            Application.EnableEvents = True
''        Else
''            MsgBox "Valeur non trouvée !!!", vbCritical
''            Exit Sub
''        End If
''        Application.EnableEvents = False
''        Dim clientCode As String
''        clientCode = allCols(fClntFMClientID)
''        Application.EnableEvents = True
''
''        Dim clientNamePurged As String
''        clientNamePurged = allCols(fClntFMClientNom)
''        Do While InStr(clientNamePurged, "[") > 0 And InStr(clientNamePurged, "]") > 0
''            clientNamePurged = Fn_Strip_Contact_From_Client_Name(clientNamePurged)
''        Loop
''        Application.EnableEvents = False
''        Target.Value = clientNamePurged
''        Application.EnableEvents = True
''
''        Call FAC_Brouillon_Clear_All_TEC_Displayed
''
''        Call FAC_Brouillon_Get_All_Non_Billable_TEC_By_Client
''
''        Call FAC_Brouillon_Load_Non_Billable_Into_Userform
''
''    End If
''
''    'Saisie du numéro de facture
''    If Not Intersect(Target, Range("L5")) Is Nothing Then
''        invNo = Trim(Target.Value)
''        If invNo <> "" Then
''            Call ObtenirFactureInfos(invNo)
''        Else
''            On Error Resume Next
''            Target.Select
''            On Error GoTo 0
''        End If
''    End If
'
'    'Sélection d'une facture à confirmer
'    If Not Intersect(Target, Range("P4:P999")) Is Nothing Then
'        invNo = Trim(Target.Value)
'        If invNo <> "" Then
'            Call ObtenirFactureInfos(invNo)
'        Else
'            Exit Sub
'        End If
'    End If
'
'End Sub
'