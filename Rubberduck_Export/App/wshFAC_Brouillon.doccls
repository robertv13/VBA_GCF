Option Explicit

Private Sub Worksheet_Activate()

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshFAC_Brouillon:Worksheet_Activate", "", 0)

    If gFromMenu = False Then
        Exit Sub
    End If
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim ws As Worksheet: Set ws = wshFAC_Brouillon
    
    Call modImport.ImporterClients
    Call modImport.ImporterTEC
    Call modImport.ImporterFacEntete
    Call modImport.ImporterFacDetails
    Call modImport.ImporterFacComptesClients
    Call modImport.ImporterFacProjetsEntete
    Call modImport.ImporterFacProjetsDetails
    
    With ws
        .Unprotect
        .Range("A:B").EntireColumn.Hidden = True
    End With
    
    'Set the zoom factor to 93% when this worksheet is activated
    ActiveWindow.Zoom = 93
    
    Application.Calculation = xlCalculationAutomatic
    
    Call SetTabOrder(ws)
    
    With ws
        .Protect UserInterfaceOnly:=True
        .EnableSelection = xlUnlockedCells
    End With
    
    'Ensure all pending events are processed - 2024-07-21 @ 17:16
    DoEvents
    
    Application.EnableEvents = False
    
    Application.Goto Reference:=Me.Cells(1, 3), Scroll:=True
    
    Me.Range("O3").value = Format$(Date, wsdADMIN.Range("B1").value)
    Me.Range("B27").value = False '2024-09-03 @ 06:33

    Me.Range("E3").value = "" '2024-09-02 @ 23:36
    Me.Range("E3").Select 'The first input is the customer name
    
    gFromMenu = False

    Application.ScreenUpdating = True
    
    Call FAC_Brouillon_New_Invoice
    
    'Libérer la mémoire
    Set ws = Nothing
    
    Application.EnableEvents = True
    
    Call Log_Record("wshFAC_Brouillon:Worksheet_Activate", "", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal target As Range)
    
    Dim startTime As Double: startTime = Timer: Call Log_Record("wshFAC_Brouillon:Worksheet_SelectionChange", target.Address, 0)
    
    '@Ignore UnassignedVariableUsage
    If gPreviousCellAddress <> "" Then
        '@Ignore UnassignedVariableUsage
        Range(gPreviousCellAddress).Interior.Color = COULEUR_BASE_FACTURATION
    End If
    
    'Masquer la forme (détail TEC) si elle est présente
    On Error Resume Next
    Dim shapeTextBox As Shape
    Set shapeTextBox = Me.Shapes("shpTECInfo")
    If Not shapeTextBox Is Nothing Then
        shapeTextBox.Visible = msoFalse
    End If
    On Error GoTo 0
    
    'Client has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("E3")) Is Nothing Then
        target.Interior.Color = COULEUR_SAISIE
    End If

    'Date has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("O3")) Is Nothing Then
        target.Interior.Color = COULEUR_SAISIE
        Application.EnableEvents = True
    End If

    'WIP description has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("F7:F999")) Is Nothing Then
        'Ajouter la forme si elle n'existe pas encore -ET- que le texte est assez long...
        If target.Cells.count = 1 Then
            If Len(target.value) > 58 Then
                If shapeTextBox Is Nothing Then
                    Set shapeTextBox = Me.Shapes.AddTextbox(msoTextOrientationHorizontal, _
                                                            100, 100, 650, 65)
                    shapeTextBox.Name = "shpTECInfo"
                End If
                
                'Définir le texte d'information en fonction de la cellule sélectionnée
                Dim infoText As String
                infoText = target.value
        
                'Mettre à jour et afficher la forme
                With shapeTextBox
                    .TextFrame.Characters.Text = infoText
                    .Top = target.Top + target.Height
                    .Left = target.Left + 25
                    .Visible = msoTrue
                    .Fill.ForeColor.RGB = RGB(255, 255, 204) ' Fond de couleur douce pour visibilité
                    .TextFrame.Characters.Font.size = 10
                End With
            End If
        End If
    End If
    
    'Template has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("O9")) Is Nothing Then
        target.Interior.Color = COULEUR_SAISIE
    End If

    'Service description has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("L11:L45")) Is Nothing Then
        target.Interior.Color = COULEUR_SAISIE
    End If
    
    'Honoraires has been selected
    If Not Intersect(target, wshFAC_Brouillon.Range("O47")) Is Nothing Then
        target.Interior.Color = COULEUR_SAISIE
        wshFAC_Brouillon.Unprotect
    End If

    'Libérer la mémoire
    Set shapeTextBox = Nothing
    
    Call Log_Record("wshFAC_Brouillon:Worksheet_SelectionChange", "", startTime)

End Sub

Private Sub Worksheet_Change(ByVal target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshFAC_Brouillon:Worksheet_Change", target.Address, 0)
    
    Dim targetAddress As String
    On Error Resume Next
    targetAddress = target.Address
    On Error GoTo 0
    
    Application.EnableEvents = False
    
    Dim fullDate As Variant
    Dim rng As Range
    
    'Le nom du client a changé
    If Not Intersect(target, Me.Range("E3")) Is Nothing And Me.Range("E3").value <> Empty Then
        Call FAC_Brouillon_Client_Change(target.value)
        Set rng = Me.Range("O3")
    End If
    
    'Invoice Date has changed
    If Not Intersect(target, Me.Range("O3")) Is Nothing Then
        Application.EnableEvents = False
        fullDate = Fn_Complete_Date(target.Text, 30, 15)
        If fullDate <> "Invalid Date" Then
            target.value = Format$(fullDate, wsdADMIN.Range("B1").value)
        Else
            Call modTEC_Saisie.AfficherMessageDateInvalide("wshFAC_Brouillon_136")
            Application.EnableEvents = False
            target.ClearContents
            Application.EnableEvents = True
            Application.Goto Range(target.Address)
        End If
       
        'Future date ?
        If CDate(Range("O3").value) > Date Then
            If MsgBox("En êtes-vous CERTAIN ?", vbYesNo + vbCritical, "Utilisation d'une date FUTURE") = vbNo Then
                Application.EnableEvents = False
                target.ClearContents
                Application.EnableEvents = True
                Application.Goto Range(target.Address)
            End If
        End If

        Call FAC_Brouillon_Date_Change(CDate(wshFAC_Brouillon.Range("O3").value))
        
        Set rng = wshFAC_Brouillon.Range("O9")
        GoTo ExitSub
    End If
    
    'Template has changed
    If Not Intersect(target, wshFAC_Brouillon.Range("O9")) Is Nothing Then
        If target.value <> "" Then
            Call Load_Invoice_Template(target.value)
        End If
        Set rng = wshFAC_Brouillon.Range("L11")
    End If
    
    'Services entry
    If Not Intersect(target, Range("L11:L40")) Is Nothing And Range("B24").value = False And Range("B25").value = False Then
        wshFAC_Finale.Range("B" & target.row + 23).value = "   - " & wshFAC_Brouillon.Range("L" & target.row).value
        Set rng = wshFAC_Brouillon.Range("M" & target.row) 'Hours
'        rng.Select
        GoTo ExitSub
    End If
  
    'Hours per service
    If Not Intersect(target, Range("M11:M45")) Is Nothing And Range("B24").value = False And Range("B25").value = False Then
        wshFAC_Brouillon.Range("N" & target.row).value = wsdADMIN.Range("TauxHoraireFacturation")
        wshFAC_Brouillon.Range("O" & target.row).value = wshFAC_Brouillon.Range("M" & target.row).value * wshFAC_Brouillon.Range("N" & target.row).value
        Set rng = wshFAC_Brouillon.Range("M" & target.row)
        wshFAC_Finale.Range("C" & target.row + 23).value = wshFAC_Brouillon.Range("M" & target.row).value
        wshFAC_Finale.Range("D" & target.row + 23).value = wshFAC_Brouillon.Range("N" & target.row).value
        wshFAC_Finale.Range("E" & target.row + 23).value = wshFAC_Brouillon.Range("O" & target.row).value

        'MAXIMUM of 30 services lines per Invoice
        If target.row < NB_MAX_LIGNE_FAC + 11 Then
            wshFAC_Brouillon.Range("L" & target.row + 1).Select
        Else
            Set rng = wshFAC_Brouillon.Range("O47")
            wshFAC_Brouillon.Range("O47").Select
        End If
        GoTo ExitSub
      End If
    
    'Fees summary has changed
    If Not Intersect(target, Range("R44:T48")) Is Nothing Then
        wshFAC_Brouillon.Range("B9").value = True
        wshFAC_Brouillon.Range("O47").value = wshFAC_Brouillon.Range("U49").value
    End If
    
    'Miscellaneous Amounts
    If Not Intersect(target, Range("O48:O50")) Is Nothing And Range("B24").value = False And Range("B25").value = False Then
        With wshFAC_Finale
            If target.row = 48 Then
                Call Log_Record("wshFAC_Brouillon:Worksheet_Change" & ":" & _
                    targetAddress & " - " & wshFAC_Brouillon.Range("O48").value, -1)
                wshFAC_Finale.Range("E70").value = wshFAC_Brouillon.Range("O48").value
                wshFAC_Brouillon.Range("O49").Select
            End If
            If target.row = 49 Then
                wshFAC_Finale.Range("E71").value = wshFAC_Brouillon.Range("O49").value
                wshFAC_Brouillon.Range("O50").Select
            End If
            If target.row = 50 Then
                wshFAC_Finale.Range("E72").value = wshFAC_Brouillon.Range("O50").value
                wshFAC_Brouillon.Range("O57").Select
            End If
        End With
        GoTo ExitSub
    End If
    
ExitSub:

    'On s'assure d'enlever la couleur dans le champs qui a déclenché l'évènement _Change
    target.Interior.Color = COULEUR_BASE_FACTURATION
    
    Application.EnableEvents = True
    
    'Libérer la mémoire
    Set rng = Nothing

    Call Log_Record("wshFAC_Brouillon:Worksheet_Change", targetAddress, startTime)
  
End Sub

