Option Explicit

Private Sub Worksheet_Activate() '2024-03-03 @ 10:14

    Call GL_Trans_Import_All
    Call GL_JE_Auto_Import_All
    Call wshJE_Clear_All_Cells

End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    'Si la cellule de la SOURCE change, alors on vérifie si l'on essaie d'appeler des E/J récurrentes
    If Not Intersect(Target, Range("E4")) Is Nothing Then
        If Target.CountLarge > 1 Then Exit Sub
        Application.EnableEvents = False
        Dim source As String
        source = UCase(Trim(Range("E4").value))
        If source = "AUTO" Then
            Call UpdateJEAuto
            wshJE.Range("B2").value = -1
            ufListeEJAuto.show vbModal
            If wshJE.Range("B2").value >= 0 Then
                wshJE.Range("J4").Activate
                wshJE.Range("J4").Select
            Else
                Call wshJE_Clear_All_Cells
                wshJE.Range("E4").Activate 'Nothing was selected
                wshJE.Range("E4").Select
            End If
        End If
        Application.EnableEvents = True
        wshJE.Range("J4").Select
    End If
    
    'Si la cellule de la DATE change, alors on essaie de construire une date
    If Not Intersect(Target, Range("J4")) Is Nothing Then
        Application.EnableEvents = False
        Dim rng As Range: Set rng = Me.Range("J4")
        rng.value = Validate_A_Date(rng.value)
        If rng.value = "" Then
            Call Invalid_Date_Message
            rng.Activate
            rng.Select
        End If
        If CDate(rng.value) > Now() Then
            If MsgBox("En êtes-vous CERTAIN ?", vbYesNo + vbCritical, "Utilisation d'une date FUTURE") = vbNo Then
                rng.value = ""
                Call Pause_Application(1)
                rng.Activate
                rng.Select
                Application.EnableEvents = True
            End If
        End If
        Set rng = Nothing
        Application.EnableEvents = True
        wshJE.Range("E6").Select
    End If
    
    'Modification de la description du compte, sauvegarde du no de compte & suggestion du montant résiduel
    If Not Intersect(Target, Range("D9:F23")) Is Nothing Then
        Application.EnableEvents = False
        With wshJE
            If .Range("D" & Target.row).value <> "" Then
                .Range("K" & Target.row).value = Get_GL_Code_From_GL_Description(.Range("D" & Target.row).value)
            End If
            
            If Target.row > 9 And _
                (.Range("G25").value <> 0 Or .Range("H25").value <> 0) And _
                .Range("G25").value <> .Range("H25").value Then
                    If .Range("G25").value > .Range("H25").value Then
                        .Range("H" & Target.row).value = .Range("G25").value - .Range("H25").value
                        .Range("H" & Target.row).Select
                    Else
                        .Range("G" & Target.row).value = .Range("H25").value - .Range("G25").value
                        .Range("G" & Target.row).Select
                    End If
            End If
        End With
        Application.EnableEvents = True
    End If
    
    'Validation du montant saisi (Débit ou Crédit), ne peut être négatif
    If Not Intersect(Target, Range("G9:H23")) Is Nothing Then
        If (wshJE.Range("G" & Target.row).value < 0 Or wshJE.Range("H" & Target.row).value < 0) Then
            MsgBox "Montant INVALIDE, ne peut être NÉGATIF", vbInformation, "Montant négatif saisi"
            Exit Sub
        End If
        If Range("G25").value <> Range("H25").value Then
            With Range("G25:H25").Interior
                .Pattern = xlSolid
                .PatternColorIndex = xlAutomatic
                .Color = 65535
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
        Else
            With Range("G25:H25").Interior
                .Pattern = xlNone
                .TintAndShade = 0
                .PatternTintAndShade = 0
            End With
        End If
    End If
    
End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)
    ' No need for code here
End Sub

Private Sub Worksheet_BeforeDoubleClick(ByVal Target As Range, Cancel As Boolean)
    ' No need for code here
End Sub

Private Sub Worksheet_BeforeRightClick(ByVal Target As Range, Cancel As Boolean)
    ' No need for code here
End Sub

Private Sub Worksheet_KeyDown(ByVal Key As MSForms.ReturnInteger, ByVal Shift As Integer)
    If Key = vbKeyTab Then ' Check if Tab key is pressed
        Select Case ActiveCell.Address
            Case "$E$4"
                Me.Range("J4").Select
            Case "$J$4"
                Me.Range("E6").Select
            Case "$E$6"
                Me.Range("D9").Select
            Case "$D$9"
                Me.Range("G9").Select
            Case "$G$9"
                Me.Range("H9").Select
            Case "$H$9"
                Me.Range("I9").Select
            Case "$I$9"
                Me.Range("D10").Select
            Case "$D$10"
                Me.Range("G10").Select
            Case "$G$10"
                Me.Range("H10").Select
            Case "$H$10"
                Me.Range("I10").Select
            Case "$I$10"
                Me.Range("D11").Select
            Case "$D$11"
                ' Add more cases as needed for your tab order
                ' If you want to loop back to the beginning, you can add "Case Else" and specify the first cell
        End Select
        ' Prevent default Tab behavior
        Key = 0
    End If
End Sub

Private Sub ckbRecurrente_Click()

    If ckbRecurrente.value = True Then
        ckbRecurrente.BackColor = vbYellow
    Else
        ckbRecurrente.BackColor = RGB(217, 217, 217)
    End If

End Sub


