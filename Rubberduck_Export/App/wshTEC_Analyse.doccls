Option Explicit

Public previousCellAddress As Variant

Private Sub Worksheet_Activate() '2024-06-13 @ 18:07

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Activate", 0)
    
    Application.ScreenUpdating = False
    
    Application.EnableEvents = False
    
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    ws.Activate
    
    'Import transactions from MASTER file
    Call Client_List_Import_All
    Call TEC_Import_All
    Call FAC_Projets_Détails_Import_All
    Call FAC_Projets_Entête_Import_All
    
    'Set the zoom factor to 100% when this worksheet is activated
    ActiveWindow.Zoom = 100

    Me.Application.Calculation = xlCalculationAutomatic

    'Mettre la date du jour comme date butoir, AVANT d'effectuer un premier traitement
    Me.Range("H3").value = Format$(Now(), wshAdmin.Range("B1").value) '2024-10-29 @ 07:34
    
    Call TEC_Sort_Group_And_Subtotal
    
    Call SetTabOrder(ws)
    
    Application.EnableEvents = False
    
    'Indique la dernière ligne explosé, qui doit être refermé en passant au suivant
    ws.Range("B2").value = 0
    
    With ws
        .Unprotect
        previousCellAddress = .Range("H3").Address
    End With
    
    ws.Outline.ShowLevels RowLevels:=2
    
    'Active le volet inférieur (Pane 2) et défile pour positionner la ligne 7 en haut de ce volet
    With ActiveWindow.Panes(2)
        .ScrollRow = 7
    End With

    Dim currentScrollRow As Long
    currentScrollRow = ActiveWindow.Panes(2).ScrollRow
    
    With ActiveWindow.Panes(1)
        Activate
    End With
    
    'Désactive les événements pour éviter tout problème lors de la mise à jour
'    ws.Range("H3").value = Now()
'    ws.Range("H3").Select
    
    'Réapplique la position du volet inférieur pour maintenir l'affichage à la ligne 7
    ActiveWindow.Panes(2).ScrollRow = currentScrollRow
    
    'Reactive les événements
    Application.EnableEvents = True
    
    ws.Visible = xlSheetVisible
    
    'Libérer la mémoire
    Set ws = Nothing
    
    Call Log_Record("wshTEC_Analyse:Worksheet_Activate", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange - " & Target.Address, 0)
    
    If previousCellAddress <> "" Then
        Range(previousCellAddress).Interior.Color = BASIC_COLOR
    End If
    
    'Is date been selected ?
    If Not Intersect(Target, wshTEC_Analyse.Range("H3")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Check if the selected cell is in column C, D or H
    If Not Intersect(Target, wshTEC_Analyse.columns("C")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.columns("D")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.columns("H")) Is Nothing Then
        
        Dim rowRange As Range
        Dim firstExpandedRow As Long
        If Target.Cells.count = 1 And Target.row > 6 Then
            If Target.value <> "" Then
                Call Delete_CheckBox
                If wshTEC_Analyse.Range("B2").value <> 0 Then
                    firstExpandedRow = wshTEC_Analyse.Range("B2").value
                    If rows(firstExpandedRow).ShowDetail Then
                        'Referme le groupe sous cette ligne
                        rows(firstExpandedRow).ShowDetail = False
                    End If
                End If
                'Loop through each row in the target selection
                Dim cell As Range
                For Each cell In Target
                    'Define the range for the entire row
                    Application.EnableEvents = False
                    wshTEC_Analyse.Range("B2").value = Target.row
                    Application.EnableEvents = True
                    Set rowRange = cell.EntireRow
                    'Check if the row is part of a group
                    If rowRange.OutlineLevel > 1 Then
                        'Expand the group
                        If rowRange.ShowDetail = False Then
                            rowRange.ShowDetail = True
                            firstExpandedRow = Target.row
                        End If
                    End If
                Next cell
                If Me.Cells(Target.row, 2) = "" Then
                    Call Build_Hours_Summary(Target.row)
                End If
            End If
        End If
    End If
    
    'Libérer la mémoire
    Set cell = Nothing
    Set rowRange = Nothing
    
    Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange", startTime)
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Change - " & Target.Address, 0)
    
    Dim fullDate As Variant
    
    'CutOffDate has changed
    If Not Intersect(Target, Range("H3")) Is Nothing Then
        Application.EnableEvents = False
        fullDate = Fn_Complete_Date(Target.Text, 45, 0)
        If fullDate <> "Invalid Date" Then
            Target.value = Format$(fullDate, wshAdmin.Range("B1").value)
            Call TEC_Sort_Group_And_Subtotal
        Else
            Call MsgBoxInvalidDate("wshTEC_Analyse_131")
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.GoTo Range(Target.Address)
        End If
       
        'Future date ?
        If CDate(Range("H3").value) > Now() Then
            If MsgBox("Il n'est pas permis d'utiliser une date dans le futur !", vbYesNo + vbCritical, "Utilisation d'une date FUTURE") = vbNo Then
                Application.EnableEvents = False
                Target.ClearContents
                Application.EnableEvents = True
                Application.GoTo Range(Target.Address)
            End If
        End If

'        Set rng = wshTEC_Analyse.Range("O9")
        GoTo ExitSub
    End If

ExitSub:

    Application.EnableEvents = True
    
    Call Log_Record("wshTEC_Analyse:Worksheet_Change", startTime)
  
End Sub
