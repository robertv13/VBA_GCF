'@Folder(GC_FISCALITÉ.1TEC)

Option Explicit

Public previousCellAddress As Variant

Private Sub Worksheet_Activate() '2024-06-13 @ 18:07

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Activate", 0)
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    
    'Import transactions from MASTER file
    Call Client_List_Import_All
    Call TEC_Import_All
    Call FAC_Projets_Détails_Import_All
    Call FAC_Projets_Entête_Import_All
    
    'Set the zoom factor to 95% when this worksheet is activated
    ActiveWindow.Zoom = 95

    Me.Application.Calculation = xlCalculationAutomatic

    Call TEC_Sort_Group_And_Subtotal
    
    Call SetTabOrder(ws)
    
    With ws
        .Unprotect
        previousCellAddress = .Range("H3").Address
    End With
    
    ws.Outline.ShowLevels RowLevels:=2
    
    'Active le volet inférieur (Pane 2) et défile pour positionner la ligne 7 en haut de ce volet
    With ActiveWindow.Panes(2)
        .ScrollRow = 7
    End With

    Dim currentScrollRow As Long
    currentScrollRow = ActiveWindow.Panes(2).ScrollRow
    
    With ActiveWindow.Panes(1)
        Activate
    End With
    
    'Désactive les événements pour éviter tout problème lors de la mise à jour
    Application.EnableEvents = False
    
    ws.Range("H3").value = Format$(Now(), "Short Date")
    ws.Range("H3").Select
    
    'Réapplique la position du volet inférieur pour maintenir l'affichage à la ligne 7
    ActiveWindow.Panes(2).ScrollRow = currentScrollRow
    
    'Reactive les événements
    Application.EnableEvents = True
    
    ws.Visible = xlSheetVisible
    
    'Cleaning memory - 2024-07-11 @ 10:14
    Set ws = Nothing
    
    Call Log_Record("wshTEC_Analyse:Worksheet_Activate()", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange", 0)
    
    If previousCellAddress <> "" Then
        Range(previousCellAddress).Interior.Color = BASIC_COLOR
    End If
    
    'Is date been selected ?
    If Not Intersect(Target, wshTEC_Analyse.Range("H3")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Check if the selected cell is in column C or H
    If Not Intersect(Target, wshTEC_Analyse.columns("C")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.columns("D")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.columns("H")) Is Nothing Then
        
        If Target.Cells.count = 1 And Target.Row > 6 Then
            If Target.value <> "" Then
                Call Delete_CheckBox
                'Loop through each row in the target selection
                Dim cell As Range
                Dim rowRange As Range
                For Each cell In Target
                    'Define the range for the entire row
                    Set rowRange = cell.EntireRow
                    'Check if the row is part of a group
                    If rowRange.OutlineLevel > 1 Then
                        'Expand the group
                        If rowRange.ShowDetail = False Then
                            rowRange.ShowDetail = True
                        End If
                    End If
                Next cell
                If Me.Cells(Target.Row, 2) = "" Then
                    Call Build_Hours_Summary(Target.Row)
                End If
            End If
        End If
    End If
    
    Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange()", startTime)
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Change", 0)
    
    Dim fullDate As Variant
    
    'CutOffDate has changed
    If Not Intersect(Target, Range("H3")) Is Nothing Then
        Application.EnableEvents = False
        fullDate = Fn_Complete_Date(CStr(Target.text))
        If fullDate <> "Invalid Date" Then
            Target.value = fullDate
            Call TEC_Sort_Group_And_Subtotal
        Else
            Call MsgBoxInvalidDate
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.Goto Range(Target.Address)
        End If
       
        'Future date ?
        If CDate(Range("H3").value) > Format$(Now(), "dd/mm/yyyy") Then
            If MsgBox("Il n'est pas permis d'utiliser une date dans le futur !", vbYesNo + vbCritical, "Utilisation d'une date FUTURE") = vbNo Then
                Application.EnableEvents = False
                Target.ClearContents
                Application.EnableEvents = True
                Application.Goto Range(Target.Address)
            End If
        End If

'        Set rng = wshTEC_Analyse.Range("O9")
        GoTo ExitSub
    End If

ExitSub:

    Application.EnableEvents = True
    
    'Cleaning memory - 2024-07-01 @ 09:34

    Call Log_Record("wshTEC_Analyse:Worksheet_Change()", startTime)
  
End Sub

Private Sub CheckBox1_Click() '2024-07-18 @ 18:53

    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    
    'Reference your checkbox by name
    Dim chkBox As OLEObject
    Set chkBox = ws.OLEObjects("CheckBox1")
    
    'Get the address of the checkbox
    Dim chkBoxPosition As String
    chkBoxPosition = GetCheckBoxPosition(chkBox)
    
    'Get the row number of the checkBox
    Dim chkboxRow As Long
    chkboxRow = CLng(Replace(chkBoxPosition, "$N$", ""))

    'Getting to the Client's Total Row (which is the line before the start of the summary)
    Dim i As Long
    For i = chkboxRow To 7 Step -1
        If ws.Range("M" & i).value = 0 Then
            Exit For
        End If
    Next i
    Dim totalRow As Long
    totalRow = i
    
    'Additional code based on the checkbox state
    If chkBox.Object.value = True Then
        
        'Is there a billing project that already exist for this customer ?
        Dim cell As String
        cell = Verify_And_Delete_Rows_If_Value_Is_Found(ws.Range("C" & totalRow + 1).value, _
                                                        ws.Range("D" & totalRow).value)
        
        Select Case cell
            Case "REMPLACER"
                Application.EnableEvents = False
                ws.Range("D" & totalRow).value = ws.Range("M" & chkboxRow).value
                Application.EnableEvents = True
                
                Dim firstRow As Long: firstRow = totalRow + 1
                Dim LastRow As Long, r As Long
                r = firstRow
                Do While ws.Range("A" & r).value <> ""
                    LastRow = r
                    r = r + 1
                Loop
                
                Dim nomClient As String
                Dim clientID As String
                nomClient = ws.Range("C" & firstRow).value
                clientID = Fn_GetID_From_Client_Name(nomClient)
                
                Dim projetID As Long 'ProjetID is establised by the next procedure
                Debug.Print "xxx1", "FAC_Projets_Détails_Add_Record_To_DB", Format(Now(), "yyyy-mm-dd hh:nn:ss")
                Call FAC_Projets_Détails_Add_Record_To_DB(clientID, firstRow, LastRow, projetID)
                Debug.Print "xxx2", "FAC_Projets_Détails_Add_Record_Locally", Format(Now(), "yyyy-mm-dd hh:nn:ss")
                Call FAC_Projets_Détails_Add_Record_Locally(clientID, firstRow, LastRow, projetID)
                
                r = firstRow
                Do While ws.Range("J" & r).value <> ""
                    r = r + 1
                Loop
                r = r - 1 'Last line of summary, excluding totals
                
                Dim arr() As Variant
                ReDim arr(1 To (r - firstRow + 1), 1 To 4)
                Dim rngSummary As Range: Set rngSummary = ws.Range("J" & firstRow & ":M" & r)
                arr = rngSummary.value
                
                'Set the date
                Dim dateProjet As String
                dateProjet = Format$(ws.Range("H3").value, "dd/mm/yyyy")
                
                'Determine the summary total
                Dim hono As Double
                hono = ws.Range("M" & r + 1).value
                
                Debug.Print "xxx3", "FAC_Projets_Entête_Add_Record_To_DB", Format(Now(), "yyyy-mm-dd hh:nn:ss")
                Call FAC_Projets_Entête_Add_Record_To_DB(projetID, nomClient, clientID, dateProjet, hono, arr)
                Debug.Print "xxx4", "FAC_Projets_Entête_Add_Record_Locally", Format(Now(), "yyyy-mm-dd hh:nn:ss")
                Call FAC_Projets_Entête_Add_Record_Locally(projetID, nomClient, clientID, dateProjet, hono, arr)
                
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
                
                Application.EnableEvents = True
                
            Case "SUPPRIMER"
                ws.Range("D" & totalRow).value = 0
                firstRow = totalRow + 1
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
                
            Case "RIEN_CHANGER"
                firstRow = totalRow + 1
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
            
        End Select
    Else
        ws.Range("D" & totalRow).value = 0
        'Perform actions when checkbox is unchecked
    End If
    
    Call Clear_Fees_Summary_And_CheckBox
    
    Application.EnableEvents = True
    
End Sub

Private Sub Get_CheckBox_Position(cb As OLEObject)

    'Set your worksheet (adjust this to match your worksheet name)
    Dim ws As Worksheet
    Set ws = wshTEC_Analyse
    
    'Reference your checkbox by name
    Dim checkBox As OLEObject
    Set checkBox = ws.OLEObjects(cb)
    
    'Get the cell that contains the top-left corner of the CheckBox
    Dim checkBoxCell As Range
    Set checkBoxCell = checkBox.TopLeftCell
    
    ' Display the address of the cell
    MsgBox "The CheckBox is located at cell: " & checkBoxCell.Address

End Sub

Sub Delete_CheckBox()

    'Set your worksheet (adjust this to match your worksheet name)
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    
    'Check if CheckBox1 exists and then delete it
    Dim checkBox As OLEObject
    Dim i As Long
    For i = 1 To 5
        On Error Resume Next
        Set checkBox = ws.OLEObjects("CheckBox" & i)
        If Not checkBox Is Nothing Then
            checkBox.delete
        End If
        On Error GoTo 0
    Next i
End Sub

Sub Back_To_TEC_Menu()

    Call Clear_Fees_Summary_And_CheckBox
    
    wshTEC_Analyse.Visible = xlSheetHidden
    
    wshMenuTEC.Activate
    wshMenuTEC.Range("A1").Select

End Sub