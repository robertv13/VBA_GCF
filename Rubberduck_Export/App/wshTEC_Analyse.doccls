Option Explicit

Public previousCellAddress As Variant

Private Sub Worksheet_Activate() '2024-06-13 @ 18:07

    Dim timerStart As Double: timerStart = Timer: Call Start_Routine("wshTEC_Analyse:Worksheet_Activate()")
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    'Import transactions from MASTER file
    Call TEC_Import_All
    
    'Set the zoom factor to 95% when this worksheet is activated
    ActiveWindow.Zoom = 95

    Me.Application.Calculation = xlCalculationAutomatic

    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("TEC_Analyse")
    
   'Hide column A & B for end users
    With ws
'        .Unprotect
'        .Range("A:B").EntireColumn.Hidden = True
    End With
    
'    Call SetTabOrder(ws)
    
    With ws
'        .Range("K4").value = Now()
'        .Range("F4").Activate
'        .Range("F4").Select
        previousCellAddress = .Range("F4").Address
    End With
    
    Application.EnableEvents = True
    
    'Cleaning memory - 2024-07-11 @ 10:14
    Set ws = Nothing
    
    Call Output_Timer_Results("wshTEC_Analyse:Worksheet_Activate()", timerStart)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    ' Check if the selected cell is in column B
    If Not Intersect(Target, wshTEC_Analyse.columns("C")) Is Nothing Then
        
        If Target.Cells.count = 1 And Target.row > 6 Then
            If Target.value <> "" Then
                Call Delete_CheckBox
                'Loop through each row in the target selection
                Dim cell As Range
                Dim rowRange As Range
                For Each cell In Target
                    ' Define the range for the entire row
                    Set rowRange = cell.EntireRow
                    ' Check if the row is part of a group
                    If rowRange.OutlineLevel > 1 Then
                        ' Expand the group
                        If rowRange.ShowDetail = False Then
                            rowRange.ShowDetail = True
                        End If
                    End If
                Next cell
                If Target.Offset(0, -1) = "" Then
                    Call Build_Hours_Summary(Target.value, Target.row)
                End If
            End If
        End If
    End If
    
End Sub

Private Sub CheckBox1_Click()

    'Reference your checkbox by name
    Dim chkBox As OLEObject
    Set chkBox = wshTEC_Analyse.OLEObjects("CheckBox1")
    
    ' Get the position of the checkbox
    Dim chkBoxPosition As String
    chkBoxPosition = GetCheckBoxPosition(chkBox)
    
    Dim chkboxRow As Long
    chkboxRow = CLng(Replace(chkBoxPosition, "$O$", ""))

    'Getting to the Total Row (which is the line before the start of the summary)
    Dim i As Long
    For i = chkboxRow To 7 Step -1
        If wshTEC_Analyse.Range("N" & i).value = "" Then
            Exit For
        End If
    Next i
    Dim totalRow As Long
    totalRow = i
    
    ' Additional code based on the checkbox state
    If chkBox.Object.value = True Then
        wshTEC_Analyse.Range("D" & totalRow).value = wshTEC_Analyse.Range("N" & chkboxRow).value
        ' Perform actions when checkbox is checked
    Else
        wshTEC_Analyse.Range("D" & totalRow).value = 0
        ' Perform actions when checkbox is unchecked
    End If
    
End Sub

Private Sub Get_CheckBox_Position(cb As OLEObject)

    'Set your worksheet (adjust this to match your worksheet name)
    Dim ws As Worksheet
    Set ws = wshTEC_Analyse
    
    'Reference your checkbox by name
    Dim checkBox As OLEObject
    Set checkBox = ws.OLEObjects(cb)
    
    'Get the cell that contains the top-left corner of the CheckBox
    Dim checkBoxCell As Range
    Set checkBoxCell = checkBox.TopLeftCell
    
    ' Display the address of the cell
    MsgBox "The CheckBox is located at cell: " & checkBoxCell.Address

End Sub

Sub Delete_CheckBox()

    'Set your worksheet (adjust this to match your worksheet name)
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    
    'Check if CheckBox1 exists and then delete it
    Dim checkBox As OLEObject
    Dim i As Integer
    For i = 1 To 5
        On Error Resume Next
        Set checkBox = ws.OLEObjects("CheckBox" & i)
        If Not checkBox Is Nothing Then
            checkBox.delete
        End If
        On Error GoTo 0
    Next i
End Sub
