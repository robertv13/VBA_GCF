Option Explicit

Public previousCellAddress As Variant

Private Sub Worksheet_Activate() '2024-06-13 @ 18:07

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Activate", "", 0)
    
    Application.ScreenUpdating = False
    
    Application.EnableEvents = False
    
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    ws.Activate
    
    'Import transactions from MASTER file
    Call Client_List_Import_All
    Call TEC_Import_All
    Call FAC_Projets_Détails_Import_All
    Call FAC_Projets_Entête_Import_All
    
    'Set the zoom factor to 100% when this worksheet is activated
    ActiveWindow.Zoom = 100

    Me.Application.Calculation = xlCalculationAutomatic

   'Mettre la date du jour comme date butoir, AVANT d'effectuer un premier traitement
    Me.Range("H3").NumberFormat = wshAdmin.Range("B1").Value
    Me.Range("H3").Value = Date
    
    Call SetTabOrder(ws)
    
    Application.EnableEvents = False
    
    'Indique la dernière ligne explosé, qui doit être refermé en passant au suivant
    ws.Range("B2").Value = 0
    
    With ws
        .Unprotect
        previousCellAddress = .Range("H3").Address
    End With
    
    ws.Outline.ShowLevels RowLevels:=2
    
    'Active le volet inférieur (Pane 2) et défile pour positionner la ligne 7 en haut de ce volet
    With ActiveWindow.Panes(2)
        .ScrollRow = 8
    End With

    Dim currentScrollRow As Long
    currentScrollRow = ActiveWindow.Panes(2).ScrollRow
    
    With ActiveWindow.Panes(1)
        Activate
    End With
    
    'Désactive les événements pour éviter tout problème lors de la mise à jour
'    ws.Range("H3").value = Now()
'    ws.Range("H3").Select
    
    'Réapplique la position du volet inférieur pour maintenir l'affichage à la ligne 7
    ActiveWindow.Panes(2).ScrollRow = currentScrollRow
    
    'Reactive les événements
    Application.EnableEvents = True
    
    ws.Visible = xlSheetVisible
    
    'Libérer la mémoire
    Set ws = Nothing
    
    Call Log_Record("wshTEC_Analyse:Worksheet_Activate", "", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange", Target.Address, 0)
    
    Debug.Print "#013 - " & Target.Address
    
    If previousCellAddress <> "" Then
        Range(previousCellAddress).Interior.Color = COULEUR_BASE_TEC
    End If
    
    'Is date been selected ?
    If Not Intersect(Target, wshTEC_Analyse.Range("H3")) Is Nothing Then
        Target.Interior.Color = COULEUR_SAISIE
    End If
    
    'Check if the selected cell is in column C, D or H
    If Not Intersect(Target, wshTEC_Analyse.Columns("C")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.Columns("D")) Is Nothing Or _
        Not Intersect(Target, wshTEC_Analyse.Columns("H")) Is Nothing Then
        
        Dim rowRange As Range
        Dim firstExpandedRow As Long
        If Target.Cells.count = 1 And Target.row > 6 Then
            If Target.Value <> "" Then
                Call Delete_CheckBox
                If wshTEC_Analyse.Range("B2").Value <> 0 Then
                    firstExpandedRow = wshTEC_Analyse.Range("B2").Value
                    If Rows(firstExpandedRow).ShowDetail Then
                        'Referme le groupe sous cette ligne
                        Rows(firstExpandedRow).ShowDetail = False
                    End If
                End If
                'Loop through each row in the target selection
                Dim cell As Range
                For Each cell In Target
                    'Define the range for the entire row
                    Application.EnableEvents = False
                    wshTEC_Analyse.Range("B2").Value = Target.row
                    Application.EnableEvents = True
                    Set rowRange = cell.EntireRow
                    'Check if the row is part of a group
                    If rowRange.OutlineLevel > 1 Then
                        'Expand the group
                        If rowRange.ShowDetail = False Then
                            rowRange.ShowDetail = True
                            firstExpandedRow = Target.row
                        End If
                    End If
                Next cell
                If Me.Cells(Target.row, 2) = "" Then
                    Call Build_Hours_Summary(Target.row)
                End If
            End If
        End If
    End If
    
    'Libérer la mémoire
    Set cell = Nothing
    Set rowRange = Nothing
    
    Call Log_Record("wshTEC_Analyse:Worksheet_SelectionChange", "", startTime)
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:Worksheet_Change", Target.Address, 0)
    
    Dim fullDate As Variant
    
    'CutOffDate has changed
    If Not Intersect(Target, Range("H3")) Is Nothing Then
        Application.EnableEvents = False
        fullDate = Fn_Complete_Date(Target.Text, 45, 0)
        If fullDate <> "Invalid Date" Then
            Target.Value = fullDate
            Call TEC_Sort_Group_And_Subtotal
        Else
            Call modTEC_Saisie.AfficherMessageDateInvalide("wshTEC_Analyse_131")
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.GoTo Range(Target.Address)
        End If
       
        'Future date ?
        If CDate(Range("H3").Value) > Date Then
            If MsgBox("Il n'est pas permis d'utiliser une date dans le futur !", vbYesNo + vbCritical, "Utilisation d'une date FUTURE") = vbNo Then
                Application.EnableEvents = False
                Target.ClearContents
                Application.EnableEvents = True
                Application.GoTo Range(Target.Address)
            End If
        End If

'        Set rng = wshTEC_Analyse.Range("O9")
        GoTo ExitSub
    End If

ExitSub:

    Application.EnableEvents = True
    
    Call Log_Record("wshTEC_Analyse:Worksheet_Change", "", startTime)
  
End Sub

Sub CheckBox1_Click() '2024-07-18 @ 18:53

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshTEC_Analyse:CheckBox1_Click", "", 0)
    
    Dim ws As Worksheet: Set ws = wshTEC_Analyse
    
    'Reference your checkbox by name
    Dim chkBox As OLEObject
    Set chkBox = ws.OLEObjects("CheckBox1")
    
    'Get the address of the checkbox
    Dim chkBoxPosition As String
    chkBoxPosition = Fn_GetCheckBoxPosition(chkBox)
    
    'Get the row number of the checkBox
    Dim chkboxRow As Long
    chkboxRow = CLng(Replace(chkBoxPosition, "$N$", ""))

    'Getting to the Client's Total Row (which is the line before the start of the summary)
    Dim i As Long
    For i = chkboxRow To 7 Step -1
        If ws.Range("M" & i).Value = 0 Then
            Exit For
        End If
    Next i
    Dim totalRow As Long
    totalRow = i
    
    'Additional code based on the checkbox state
    If chkBox.Object.Value = True Then
        
        'Is there a billing project that already exist for this customer ?
        Dim cell As String
        cell = Fn_Verify_And_Delete_Rows_If_Value_Is_Found(ws.Range("C" & totalRow + 1).Value, _
                                                        ws.Range("D" & totalRow).Value)
        
        Select Case cell
            Case "REMPLACER"
                Application.EnableEvents = False
                ws.Range("D" & totalRow).Value = ws.Range("M" & chkboxRow).Value
                Application.EnableEvents = True
                
                Dim firstRow As Long: firstRow = totalRow + 1
                Dim lastRow As Long, r As Long
                r = firstRow
                Do While ws.Range("A" & r).Value <> ""
                    lastRow = r
                    r = r + 1
                Loop
                
                Dim nomClient As String
                Dim clientID As String
                nomClient = ws.Range("C" & firstRow).Value
                clientID = Fn_GetID_From_Client_Name(nomClient)
                
                Dim projetID As Long 'ProjetID is establised by the next procedure
                Call FAC_Projets_Détails_Add_Record_To_DB(clientID, firstRow, lastRow, projetID)
                Call FAC_Projets_Détails_Add_Record_Locally(clientID, firstRow, lastRow, projetID)
                
                r = firstRow
                Do While ws.Range("J" & r).Value <> ""
                    r = r + 1
                Loop
                r = r - 1 'Last line of summary, excluding totals
                
                Dim arr() As Variant
                ReDim arr(1 To (r - firstRow + 1), 1 To 4)
                Dim rngSummary As Range: Set rngSummary = ws.Range("J" & firstRow & ":M" & r)
                arr = rngSummary.Value
                
                'Set the date
                Dim dateProjet As String
                dateProjet = Format$(ws.Range("H3").Value, "dd/mm/yyyy")
                
                'Determine the summary total
                Dim hono As Double
                hono = ws.Range("M" & r + 1).Value
                
                Call FAC_Projets_Entête_Add_Record_To_DB(projetID, nomClient, clientID, dateProjet, hono, arr)
                Call FAC_Projets_Entête_Add_Record_Locally(projetID, nomClient, clientID, dateProjet, hono, arr)
                
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
                
                Application.EnableEvents = True
                
            Case "SUPPRIMER"
                ws.Range("D" & totalRow).Value = 0
                firstRow = totalRow + 1
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
                
            Case "RIEN_CHANGER"
                firstRow = totalRow + 1
                Call Groups_SubTotals_Collapse_A_Client(firstRow)
            
        End Select
    Else
        ws.Range("D" & totalRow).Value = 0
        'Perform actions when checkbox is unchecked
        Application.EnableEvents = True
        Call Groups_SubTotals_Collapse_A_Client(firstRow)

    End If
    
    Call Clear_Fees_Summary_And_CheckBox
    
    Application.EnableEvents = True
    
    'Libérer la mémoire
    Set chkBox = Nothing
    Set rngSummary = Nothing
    Set ws = Nothing
    
    Call Log_Record("wshTEC_Analyse:CheckBox1_Click", "", startTime)

End Sub

