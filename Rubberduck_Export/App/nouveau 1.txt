# Script : harmonise-casse-vba.ps1
# Objectif : uniformiser la casse des propri√©t√©s dans les fichiers VBA
# Encodage : Lecture et √©criture en UTF-8 explicite

$root = "C:\VBA\GC_FISCALIT√â\PROJET_GIT\Rubberduck_Export\App"

$extensions = @("*.bas", "*.cls", "*.frm", "*.doccls")
$propertyMap = @{}

# √âtape 1 : collecter les noms de propri√©t√© avec leur casse de r√©f√©rence
Get-ChildItem -Recurse -Path $root -Include $extensions | ForEach-Object {
    $lines = [System.IO.File]::ReadAllLines($_.FullName, [System.Text.Encoding]::UTF8)
    foreach ($line in $lines) {
        if ($line -match "^\s*Property\s+(Get|Let|Set)\s+([a-zA-Z_][a-zA-Z0-9_]*)") {
            $name = $matches[2]
            $key = $name.ToLower()
            if (-not $propertyMap.ContainsKey($key)) {
                $propertyMap[$key] = $name
            }
        }
    }
}

# √âtape 2 : harmoniser les fichiers
Get-ChildItem -Recurse -Path $root -Include $extensions | ForEach-Object {
    $filePath = $_.FullName
    Write-Host "üîß Traitement de : $($_.Name)"
    $lines = [System.IO.File]::ReadAllLines($filePath, [System.Text.Encoding]::UTF8)
    $newLines = foreach ($line in $lines) {
        $current = $line
        foreach ($key in $propertyMap.Keys) {
            $ref = [regex]::Escape($key)
            $current = [regex]::Replace($current, "\b$ref\b", $propertyMap[$key], "IgnoreCase")
        }
        $current
    }
    [System.IO.File]::WriteAllLines($filePath, $newLines, [System.Text.Encoding]::UTF8)
}
