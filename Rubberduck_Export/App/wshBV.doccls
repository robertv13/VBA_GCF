Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range) 'Worksheet wshBV - 2023-12-31

    If Not Intersect(Target, Range("J1")) Is Nothing Then 'Cut-off date has changed
        Application.EnableEvents = False
        Dim Cell As String
        Cell = Trim(Range("J1").value)
        Dim r As Range
        Set r = Range("J1")
        Call BuildDate(Cell, r)
        
        Call UpdateBV 'Automatically recalculate Trial Balance
        
        Application.EnableEvents = True
    End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Not Intersect(Target, wshBV.Range("D4:G" & Range("B2").value)) Is Nothing Then
        Application.EnableEvents = False
        Dim GLAcct As String, GLDescription As String, DateLimite As String
        GLAcct = CStr(Range("D" & Target.row).value)
        GLDescription = Range("E" & Target.row).value
        DateLimite = Range("J1").value

        Call GLTransDisplay(GLAcct, GLDescription, DateLimite)
        
        Application.EnableEvents = True
    End If

End Sub

Sub UpdateBV() 'Button 'Actualiser'
    
    Application.EnableEvents = False
    
    Dim minDate As Date, dateCutOff As Date, lastRow As Long, solde As Currency
    Dim planComptable As Range
    Set planComptable = wshAdmin.Range("tbPlanComptable")
    
    'Clear Detail transaction section
    wshBV.Range("L4:S99999").ClearContents
    
    'Clear contents & formats for TB cells
    lastRow = wshBV.Range("D99999").End(xlUp).row
    With wshBV.Range("D4" & ":G" & lastRow + 2)
        .ClearContents
        .ClearFormats
    End With
    
    'Add the cut-off date in the header (printing purposes)
    wshBV.Range("C2").value = "au " & wshBV.Range("J1").value

    minDate = CDate("01/01/2023")
    dateCutOff = CDate(wshBV.Range("J1").value)
    wshBV.Range("B3").value = 4
    
    Call AdvancedFilterGLTrans("", minDate, dateCutOff)
    
    lastRow = wshGLFACTrans.Range("V99999").End(xlUp).row
    If lastRow < 2 Then Exit Sub
    Dim r As Long, BreakGLNo As String, oldDesc As String
    BreakGLNo = wshGLFACTrans.Range("V2").value
    oldDesc = wshGLFACTrans.Range("W2").value
    
    For r = 2 To lastRow
        If wshGLFACTrans.Range("V" & r).value <> BreakGLNo Then
            Call GLTransSubTotal(BreakGLNo, oldDesc, solde)
            BreakGLNo = wshGLFACTrans.Range("V" & r).value
           oldDesc = wshGLFACTrans.Range("W" & r).value
            solde = 0
        End If
        solde = solde + wshGLFACTrans.Range("X" & r).value - wshGLFACTrans.Range("Y" & r).value
    Next r
    
    Call GLTransSubTotal(BreakGLNo, oldDesc, solde)
    
    r = wshBV.Range("B3").value + 1
    
    setBVTotals r, 6 'Débit
    setBVTotals r, 7 'Crédit
    
    Dim CenterHeaderTxt As String
    CenterHeaderTxt = wshAdmin.Range("NomEntreprise")
    With ActiveSheet.PageSetup
        .CenterHeader = "&""Calibri,Bold""&20 " & CenterHeaderTxt
        .PrintArea = "$D$1:$G$" & r
        .Orientation = xlPortrait
        .FitToPagesWide = 1
        .FitToPagesTall = 1
    End With

    wshBV.Range("B2").value = r - 2
  
    Application.EnableEvents = True
  
End Sub

Sub setBVTotals(r As Long, c As Long)

    Dim sumRange As Range

    With wshBV.Cells(r, c).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With wshBV.Cells(r, c).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    
    wshBV.Cells(r, c).Font.Bold = True
    wshBV.Cells(r, c).NumberFormat = "#,##0.00 $"
    Set sumRange = Range(Cells(4, c), Cells(r - 1, c))
    
    wshBV.Cells(r, c).value = Application.WorksheetFunction.Sum(sumRange)

End Sub

Sub GLTransDisplay(GLAcct As String, GLDesc As String, maxDate As String) 'Display GL Trans for a specific account

    'Clear the display area & display the account number & description
    wshBV.Range("R5:R99999").ClearFormats
    wshBV.Range("M5:S99999").ClearContents
    
    wshBV.Range("L4").Font.Bold = True
    wshBV.Range("L4").value = GLAcct & " - " & GLDesc
    
    'Prepare starting date & cut-off date
    Dim minD As Date, maxD As Date
    minD = CDate(Format("01-01-2023", "mm-dd-yyyy"))
    maxD = CDate(Format(maxDate, "mm-dd-yyyy"))
    
'    Call AdvancedFilterGLTrans(GLAcct, minD, maxD)
    'Use the Advanced Filter Result already prepard for TB
    Dim foundRow As Long, lastResultRow As Long
    lastResultRow = wshGLFACTrans.Range("S99999").End(xlUp).row
    foundRow = 0
    
    ' Loop through each row in the search range
    For Each row In wshGLFACTrans.Range("V2:V" & lastResultRow).Rows
        If row.Cells(1, 1).value = GLAcct Then
            'Store the row number and exit the loop
            foundRow = row.row
            Exit For
        End If
    Next row
    
    ' Check if the target value was found
    If foundRow = 0 Then
        MsgBox "Target value not found in the specified range."
        Exit Sub
    End If
    
    Dim rowGLDetail As Long
    rowGLDetail = 5
    wshBV.Range("R4").value = 0
    
    Do Until wshGLFACTrans.Range("V" & foundRow).value <> GLAcct
        'Traitement des transactions détaillées
        wshBV.Range("M" & rowGLDetail).value = wshGLFACTrans.Range("S" & foundRow).value
        wshBV.Range("N" & rowGLDetail).value = wshGLFACTrans.Range("T" & foundRow).value
        wshBV.Range("O" & rowGLDetail).value = wshGLFACTrans.Range("U" & foundRow).value
        wshBV.Range("P" & rowGLDetail).value = wshGLFACTrans.Range("X" & foundRow).value
        wshBV.Range("Q" & rowGLDetail).value = wshGLFACTrans.Range("Y" & foundRow).value
        wshBV.Range("R" & rowGLDetail).value = wshBV.Range("R" & rowGLDetail - 1).value + _
            wshGLFACTrans.Range("X" & foundRow).value - wshGLFACTrans.Range("Y" & foundRow).value
        wshBV.Range("S" & rowGLDetail).value = wshGLFACTrans.Range("Z" & foundRow).value
        foundRow = foundRow + 1
        rowGLDetail = rowGLDetail + 1
    Loop
        wshBV.Range("R" & rowGLDetail - 1).Font.Bold = True
        With wshBV.Range("R" & rowGLDetail - 1).Interior
            .Pattern = xlSolid
            .PatternColorIndex = xlAutomatic
            .ThemeColor = xlThemeColorDark1
            .TintAndShade = -4.99893185216834E-02
            .PatternTintAndShade = 0
        End With

End Sub

Sub AdvancedFilterGLTrans(GLNo As String, minDate As Date, maxDate As Date)

    With wshGLFACTrans
        Dim rgResult As Range, rgData As Range, rgCriteria As Range, rgCopyToRange As Range
        Set rgResult = .Range("R2").CurrentRegion
        Call ClearRangeBorders(rgResult)
        rgResult.ClearContents
        Set rgData = .Range("C1").CurrentRegion
        .Range("N3").value = GLNo
        .Range("O3").value = ">=" & Format(minDate, "mm-dd-yyyy")
        .Range("P3").value = "<=" & Format(maxDate, "mm-dd-yyyy")
        
        Set rgCriteria = .Range("N2:P3")
        Set rgCopyToRange = .Range("R1")
        
        rgData.AdvancedFilter xlFilterCopy, rgCriteria, rgCopyToRange
        
        Dim lastResultRow
        lastResultRow = .Range("R999999").End(xlUp).row
        If lastResultRow < 3 Then GoTo NoSort
        With .Sort
            .SortFields.Clear
            .SortFields.Add Key:=wshGLFACTrans.Range("V1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortTextAsNumbers 'Sort Based On GLNo
            .SortFields.Add Key:=wshGLFACTrans.Range("S1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On Date
            .SortFields.Add Key:=wshGLFACTrans.Range("T1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On JE Number
            .SetRange wshGLFACTrans.Range("R2:AA" & lastResultRow) 'Set Range
            .Apply 'Apply Sort
         End With
    End With

NoSort:

End Sub

Sub GLTransSubTotal(GLNo As String, GLDesc As String, s As Currency)

    Dim r As Long
    r = wshBV.Range("B3").value
    wshBV.Range("D" & r).HorizontalAlignment = xlCenter
    wshBV.Range("D" & r).value = GLNo
    wshBV.Range("E" & r).value = GLDesc
    If s > 0 Then
        wshBV.Range("F" & r).value = s
    ElseIf s < 0 Then
        wshBV.Range("G" & r).value = -s
    End If
    wshBV.Range("B3").value = wshBV.Range("B3").value + 1
    
End Sub