Option Explicit

'Worksheet wshBV - 2023-12-29
Private Sub Worksheet_Change(ByVal Target As Range)

    If Not Intersect(Target, Range("J1")) Is Nothing Then 'Cut-off date has changed
        Application.EnableEvents = False
        Dim Cell As String
        Cell = Trim(Range("J1").value)
        Dim r As Range
        Set r = Range("J1")
        Call BuildDate(Cell, r)
        'wshBV.Range("B1").value = wshBV.Range("J1").value 'Mise à jour des contrôles
        Application.EnableEvents = True
    End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Not Intersect(Target, wshBV.Range("D4:G" & Range("B2").value)) Is Nothing Then
        Application.EnableEvents = False
'        Dim GLAcct As String, GLDescription As String, DateLimite As String
'        GLAcct = CStr(Range("D" & Target.row).value)
'        GLDescription = Range("E" & Target.row).value
'        DateLimite = Range("J1").value
'        MsgBox "La date limite (J1) est = " & DateLimite
'
'        Call GLTransDisplay(GLAcct, GLDescription, DateLimite)
'
        Application.EnableEvents = True
    End If

End Sub

Sub UpdateBV() 'Button 'Actualiser'
    Dim minDate As Date, dateCutOff As Date, lastRow As Long, solde As Currency
    Dim planComptable As Range
    Set planComptable = wshAdmin.Range("tbPlanComptable")
    
    'Clear contents & formats for TB cells
    lastRow = wshBV.Range("D99999").End(xlUp).row
    With wshBV.Range("D4" & ":G" & lastRow + 2)
        .ClearContents
        .ClearFormats
    End With

    minDate = CDate("01/01/2023")
    dateCutOff = CDate(wshBV.Range("J1").value)
    wshBV.Range("B3").value = 4
    
    Call AdvancedFilterGLTrans("", minDate, dateCutOff)
    
    lastRow = wshGLFACTrans.Range("V99999").End(xlUp).row
    If lastRow < 2 Then Exit Sub
    Dim r As Long, BreakGLNo As String, oldDesc As String
    BreakGLNo = wshGLFACTrans.Range("V2").value
    oldDesc = wshGLFACTrans.Range("W2").value
    
    For r = 2 To lastRow
        If wshGLFACTrans.Range("V" & r).value <> BreakGLNo Then
            Call GLTransSubTotal(BreakGLNo, oldDesc, solde)
            BreakGLNo = wshGLFACTrans.Range("V" & r).value
           oldDesc = wshGLFACTrans.Range("W2").value
            solde = 0
        End If
        solde = solde + wshGLFACTrans.Range("X" & r).value - wshGLFACTrans.Range("Y" & r).value
    Next r
    Debug.Print "BV est complétée !"
    Call GLTransSubTotal(BreakGLNo, oldDesc, solde)
    
    r = wshBV.Range("B3").value + 3
    
    setBVTotals r, 6
    setBVTotals r, 7

    wshBV.Range("B2").value = wshBV.Range("B3").value + 3
  
End Sub

Sub setBVTotals(r As Long, c As Long)

    With wshBV.Cells(r, c).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With wshBV.Cells(r, c).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    wshBV.Cells(r, c).Font.Bold = True
    
    'Ajoute la formule SUM() aux colonnes Débit et Crédit
    wshBV.Range("F" & r).Formula = "=SUM(F4:F" & r - 1 & ")"
    wshBV.Range("G" & r).Formula = "=SUM(G4:G" & r - 1 & ")"
    
    'Force le format de la colonne F & G
    wshBV.Range("F" & r).NumberFormat = "#,##0.00 $"
    wshBV.Range("G" & r).NumberFormat = "#,##0.00 $"

End Sub

'Function GetBalance(GL As String, d As Date) As Currency
'
'    Dim lastRowTrans, startRow, rowTrans As Long, dd As Date
'    Dim solde As Currency
'
'    lastRowTrans = wshGLFACTrans.Cells(Rows.count, "D").End(xlUp).row
'    startRow = 2
'
'    dd = d
'    Call SetGLTransAdvancedFilter(GL, "01-01-2023", dd)
'
'    For rowTrans = startRow To lastRowTrans
'        If wshGL.Range("G" & rowTrans).value = GL And Format(wshGL.Range("D" & rowTrans).value, "yyyymmdd") <= d Then
'            Debug.Print Tab(5); "Sub GetBalance - ", wshGL.Range("G" & rowTrans).value, wshGL.Range("D" & rowTrans).value
'            GetBalance = GetBalance + wshGL.Range("I" & rowTrans).value - wshGL.Range("J" & rowTrans).value
'        End If
'    Next
'End Function

Sub GLTransDisplay(GLAcct As String, GLDesc As String, maxDate As String) 'Display GL Trans for a specific account

    'Clear the display area & display the account number & description
    
    wshBV.Range("M5").CurrentRegion.ClearContents
    wshBV.Range("M5").CurrentRegion.ClearFormats
    
    wshBV.Range("L4").Font.Bold = True
    wshBV.Range("L4").value = GLAcct & " - " & GLDesc
    
    'Prepare starting date & cut-off date
    Dim minD As Date, maxD As Date
    minD = CDate(Format("01-01-2023", "mm-dd-yyyy"))
    maxD = CDate(Format(maxDate, "mm-dd-yyyy"))
    MsgBox "MinDate = " & minD & " - MaxDate = " & maxD
    
    Call SetGLTransAdvancedFilter(GLAcct, minD, maxD)
    
    With wshGLFACTrans
        'Analyse des transactions détaillées
        Dim r As Long, RowGLFirst As Long, RowGLMax As Long, rowGLDetail As Long
        RowGLFirst = 2
        RowGLMax = wshGLFACTrans.Range("R999999").End(xlUp).row  'Last Row used in wshGLFACTrans (Transactions)
        rowGLDetail = 5

        For r = RowGLFirst To RowGLMax
            'Debug.Print Tab(10); "GLTransDisplay - ", .Range("R" & r).value, .Range("S" & r).value, .Range("T" & r).value, .Range("W" & r).value, .Range("X" & r).value, .Range("S" & r).value
            wshBV.Range("M" & rowGLDetail).value = .Range("R" & r).value
            wshBV.Range("N" & rowGLDetail).value = .Range("S" & r).value
            wshBV.Range("O" & rowGLDetail).value = .Range("T" & r).value
            wshBV.Range("P" & rowGLDetail).value = .Range("W" & r).value
            wshBV.Range("Q" & rowGLDetail).value = .Range("X" & r).value
            wshBV.Range("S" & rowGLDetail).value = .Range("S" & r).value
            rowGLDetail = rowGLDetail + 1
        Next
        
    End With
    wshBV.Range("R4").value = 0
    Dim rowGLDetailMax As Long
    rowGLDetailMax = wshBV.Range("M99999").End(xlUp).row
    For r = 5 To rowGLDetailMax
        wshBV.Range("R" & r).value = wshBV.Range("R" & r - 1).value + wshBV.Range("P" & r).value - wshBV.Range("Q" & r).value
        If r = 5 Or r <> rowGLDetailMax Then
        wshBV.Range("R" & r).Font.Bold = False
        End If
    Next r
    wshBV.Range("R" & r - 1).Font.Bold = True
    With wshBV.Range("R" & r - 1).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
    End With

End Sub

'Sub SetGLTransAdvancedFilter(GLNo As String, minD As Date, maxD As Date)
'
'    Application.EnableEvents = False
'
'    Debug.Print "GetGLTrans - ", GLNo, minD, maxD
'
'    With wshGLFACTrans
'
'        Dim rgResult As Range, rgData As Range, rgCriteria As Range, rgCopyToRange As Range
'        rgResult = .Range("R2:Z99999")
'        Call ClearRangeBorders(rgResult)
'        rgResult.ClearContents
'        Set rgData = .Range("C1").CurrentRegion
'        .Range("N3").value = GLNo
'        .Range("O3").value = ">=" & minD
'        '.Range("O3").value = ">=" & "01-01-2023"
'        .Range("P3").value = "<=" & maxD
'        '.Range("P3").value = "<=" & "06-30-2023"
'
'        Set rgCriteria = .Range("N2:P3")
'        Set rgCopyToRange = .Range("R1").CurrentRegion.Rows(1)
'
'        rgData.AdvancedFilter xlFilterCopy, rgCriteria, rgCopyToRange
'
'        Dim lastResultRow
'        lastResultRow = .Range("M999999").End(xlUp).row
'        If lastResultRow < 6 Then GoTo NoSort
'        With .Sort
'            .SortFields.Clear
'            .SortFields.Add Key:=wshGLFACTrans.Range("M5"), _
'                SortOn:=xlSortOnValues, _
'                Order:=xlAscending, _
'                DataOption:=xlSortNormal 'Sort Based On Date
'            .SortFields.Add Key:=wshGLFACTrans.Range("N5"), _
'                SortOn:=xlSortOnValues, _
'                Order:=xlAscending, _
'                DataOption:=xlSortNormal 'Sort Based On JE Number
'            .SetRange wshGLFACTrans.Range("M5:T" & lastResultRow) 'Set Range
'            .Apply 'Apply Sort
'         End With
'    End With
'
'NoSort:
'
'    Application.EnableEvents = True
'
'End Sub

Sub AdvancedFilterGLTrans(GLNo As String, minDate As Date, maxDate As Date)

    Debug.Print "AdvancedFilterGlTrans - GLNo = '" & GLNo & "' - MinDate=" & minDate & " MaxDate=" & maxDate
    
    Application.EnableEvents = False
    
    With wshGLFACTrans
        Dim rgResult As Range, rgData As Range, rgCriteria As Range, rgCopyToRange As Range
        Set rgResult = .Range("R2").CurrentRegion
        Call ClearRangeBorders(rgResult)
        rgResult.ClearContents
        Set rgData = .Range("C1").CurrentRegion
        .Range("N3").value = GLNo
        .Range("O3").value = ">=" & Format(minDate, "mm-dd-yyyy")
'        .Range("O3").value = ">=" & "01-01-2023"
        .Range("P3").value = "<=" & Format(maxDate, "mm-dd-yyyy")
'        .Range("P3").value = "<=" & "12-31-2023"
        
        Set rgCriteria = .Range("N2:P3")
        Set rgCopyToRange = .Range("R1").CurrentRegion.Offset(1, 0).Rows(1)
        
        rgData.AdvancedFilter xlFilterCopy, rgCriteria, rgCopyToRange
        
        Dim lastResultRow
        lastResultRow = .Range("R999999").End(xlUp).row
        If lastResultRow < 3 Then GoTo NoSort
        With .Sort
            .SortFields.Clear
            .SortFields.Add Key:=wshGLFACTrans.Range("V1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortTextAsNumbers 'Sort Based On GLNo
            .SortFields.Add Key:=wshGLFACTrans.Range("S1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On Date
            .SortFields.Add Key:=wshGLFACTrans.Range("T1"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On JE Number
            .SetRange wshGLFACTrans.Range("R1:AA" & lastResultRow) 'Set Range
            .Apply 'Apply Sort
         End With
    End With

NoSort:

    Application.EnableEvents = True

End Sub

Sub GLTransSubTotal(GLNo As String, GLDesc As String, s As Currency)

    Dim r As Long
    r = wshBV.Range("B3").value
    wshBV.Range("D" & r).HorizontalAlignment = xlCenter
    wshBV.Range("D" & r).value = GLNo
    wshBV.Range("E" & r).value = GLDesc
    If s > 0 Then
        wshBV.Range("F" & r).value = s
    ElseIf s < 0 Then
        wshBV.Range("G" & r).value = -s
    End If
    wshBV.Range("B3").value = wshBV.Range("B3").value + 1
    
End Sub