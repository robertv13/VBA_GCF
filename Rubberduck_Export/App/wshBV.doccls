Option Explicit

Private Sub Worksheet_Change(ByVal Target As Range)

    If Not Intersect(Target, Range("J1")) Is Nothing Then
        Application.EnableEvents = False
        Dim Cell As String
        Cell = Trim(Range("J1").value)
        Dim r As Range
        Set r = Range("J1")
        Call BuildDate(Cell, r)
        'wshBV.Range("B1").value = wshBV.Range("J1").value 'Mise à jour des contrôles
        Application.EnableEvents = True
    End If

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If Not Intersect(Target, wshBV.Range("D4:G" & Range("B2").value)) Is Nothing Then
        Application.EnableEvents = False
        Dim GLAcct As String, GLDescription As String, DateLimite As String
        GLAcct = CStr(Range("D" & Target.row).value)
        GLDescription = Range("E" & Target.row).value
        DateLimite = Range("J1").value
        Call GLTransDisplay(GLAcct, GLDescription, DateLimite)
        Application.EnableEvents = True
    End If

End Sub

Sub UpdateBV() 'Forme 'Actualiser'
    Dim dateCutOff As String
    Dim lastRow As Long
    Dim Solde As Currency
    Dim PlanComptable As Range
    Set PlanComptable = wshAdmin.Range("tbPlanComptable")
    
    'Efface la BV
    lastRow = wshBV.Range("D99999").End(xlUp).row
    wshBV.Range("D4" & ":G" & lastRow + 2).ClearContents
    wshBV.Range("D4" & ":G" & lastRow + 2).ClearFormats

    wshBV.Range("L4").CurrentRegion.ClearContents
    wshBV.Range("M4").CurrentRegion.ClearFormats

    'wshBV.Range("B1").value = wshBV.Range("J1").value
'    dateCutOff = Format(wshBV.Range("J1").value, "yyyymmdd")
    dateCutOff = CDate(wshBV.Range("J1").value)
    
    'Scan chart of accounts to process all valid accounts
    Dim currentRow As Range
    Dim row As Long, rowUsed As Long
    row = 4
    For Each currentRow In PlanComptable.Rows
        'Debug.Print "Update BV - ", currentRow.Cells(1, 2).value, "CutOff Date = " & dateCutOff
        
        Solde = GetBalance(currentRow.Cells(1, 2).value, dateCutOff)
        
        If Solde <> 0 Then
            wshBV.Range("D" & row).HorizontalAlignment = xlCenter
            wshBV.Range("D" & row).value = currentRow.Cells(1, 2).value
            wshBV.Range("E" & row).value = currentRow.Cells(1, 3).value
            If Solde > 0 Then
                wshBV.Range("F" & row).value = Solde
            Else
                wshBV.Range("G" & row).value = -Solde
            End If
            row = row + 1
            rowUsed = rowUsed + 1
        End If
    Next currentRow

    row = row + 1
    
    setBVTotals row, 6
    setBVTotals row, 7
    
    wshBV.Range("B2").value = rowUsed + 3
  
End Sub

Sub setBVTotals(r As Long, c As Long)

    With wshBV.Cells(r, c).Borders(xlEdgeTop)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlThin
    End With
    With wshBV.Cells(r, c).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .ColorIndex = 0
        .TintAndShade = 0
        .Weight = xlMedium
    End With
    wshBV.Cells(r, c).Font.Bold = True
    
    'Ajoute la formule SUM() aux colonnes Débit et Crédit
    wshBV.Range("F" & r).Formula = "=SUM(F4:F" & r - 1 & ")"
    wshBV.Range("G" & r).Formula = "=SUM(G4:G" & r - 1 & ")"
    
    'Force le format de la colonne F & G
    wshBV.Range("F" & r).NumberFormat = "#,##0.00 $"
    wshBV.Range("G" & r).NumberFormat = "#,##0.00 $"
    wshBV.Range("B2").value = r - 2

End Sub

Function GetBalance(GL As String, d As Date) As Currency

    Dim lastRowTrans, startRow, rowTrans As Long, dd As Date
    Dim Solde As Currency
    
    lastRowTrans = wshGLFACTrans.Cells(Rows.count, "D").End(xlUp).row
    startRow = 2
    
    dd = d
    Call SetGLTransAdvancedFilter(GL, "01-01-2023", dd)
    
    For rowTrans = startRow To lastRowTrans
        If wshGL.Range("G" & rowTrans).value = GL And Format(wshGL.Range("D" & rowTrans).value, "yyyymmdd") <= d Then
            Debug.Print Tab(5); "Sub GetBalance - ", wshGL.Range("G" & rowTrans).value, wshGL.Range("D" & rowTrans).value
            GetBalance = GetBalance + wshGL.Range("I" & rowTrans).value - wshGL.Range("J" & rowTrans).value
        End If
    Next
End Function

Sub GLTransDisplay(GLAcct As String, GLDesc As String, MaxDate As String)

    'Clear the display area & display the account number & description
    
    wshBV.Range("M5").CurrentRegion.ClearContents
    wshBV.Range("M5").CurrentRegion.ClearFormats
    
    wshBV.Range("L4").Font.Bold = True
    wshBV.Range("L4").value = GLAcct & " - " & GLDesc
    
    'Prepare starting date & cut-off date
    Dim minD As Date, maxD As Date
    minD = CDate(Format("01-01-2023", "mm-dd-yyyy"))
    maxD = CDate(Format(MaxDate, "mm-dd-yyyy"))
    MsgBox "MinDate = " & minD & " - MaxDate = " & maxD
    
    Call SetGLTransAdvancedFilter(GLAcct, minD, maxD)
    
    With wshGLFACTrans
        'Analyse des transactions détaillées
        Dim r As Long, RowGLFirst As Long, RowGLMax As Long, rowGLDetail As Long
        RowGLFirst = 2
        RowGLMax = wshGLFACTrans.Range("R999999").End(xlUp).row  'Last Row used in wshGLFACTrans (Transactions)
        rowGLDetail = 5

        For r = RowGLFirst To RowGLMax
            'Debug.Print Tab(10); "GLTransDisplay - ", .Range("R" & r).value, .Range("S" & r).value, .Range("T" & r).value, .Range("W" & r).value, .Range("X" & r).value, .Range("S" & r).value
            wshBV.Range("M" & rowGLDetail).value = .Range("R" & r).value
            wshBV.Range("N" & rowGLDetail).value = .Range("S" & r).value
            wshBV.Range("O" & rowGLDetail).value = .Range("T" & r).value
            wshBV.Range("P" & rowGLDetail).value = .Range("W" & r).value
            wshBV.Range("Q" & rowGLDetail).value = .Range("X" & r).value
            wshBV.Range("S" & rowGLDetail).value = .Range("S" & r).value
            rowGLDetail = rowGLDetail + 1
        Next
        
    End With
    wshBV.Range("R4").value = 0
    Dim rowGLDetailMax As Long
    rowGLDetailMax = wshBV.Range("M99999").End(xlUp).row
    For r = 5 To rowGLDetailMax
        wshBV.Range("R" & r).value = wshBV.Range("R" & r - 1).value + wshBV.Range("P" & r).value - wshBV.Range("Q" & r).value
        If r = 5 Or r <> rowGLDetailMax Then
        wshBV.Range("R" & r).Font.Bold = False
        End If
    Next r
    wshBV.Range("R" & r - 1).Font.Bold = True
    With wshBV.Range("R" & r - 1).Interior
        .Pattern = xlSolid
        .PatternColorIndex = xlAutomatic
        .ThemeColor = xlThemeColorDark1
        .TintAndShade = -4.99893185216834E-02
        .PatternTintAndShade = 0
    End With

End Sub

Sub SetGLTransAdvancedFilter(GLNo As String, minD As Date, maxD As Date)

    Application.EnableEvents = False
    
    Debug.Print "GetGLTrans - ", GLNo, minD, maxD
    
    With wshGLFACTrans
    
        Dim rgResult As Range, rgData As Range, rgCriteria As Range, rgCopyToRange As Range
        rgResult = .Range("R2:Z99999")
        Call ClearRangeBorders(rgResult)
        rgResult.ClearContents
        Set rgData = .Range("C1").CurrentRegion
        .Range("N3").value = GLNo
        '.Range("O3").value = ">=" & minD
        .Range("O3").value = ">=" & "01-01-2023"
        '.Range("P3").value = "<=" & maxD
        .Range("P3").value = "<=" & "06-30-2023"
        
        Set rgCriteria = .Range("N2:P3")
        Set rgCopyToRange = .Range("R1").CurrentRegion.Rows(1)
        
        rgData.AdvancedFilter xlFilterCopy, rgCriteria, rgCopyToRange
        
        Dim lastResultRow
        lastResultRow = .Range("M999999").End(xlUp).row
        If lastResultRow < 6 Then GoTo NoSort
        With .Sort
            .SortFields.Clear
            .SortFields.Add Key:=wshGLFACTrans.Range("M5"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On Date
            .SortFields.Add Key:=wshGLFACTrans.Range("N5"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On JE Number
            .SetRange wshGLFACTrans.Range("M5:T" & lastResultRow) 'Set Range
            .Apply 'Apply Sort
         End With
    End With

NoSort:

    Application.EnableEvents = True

End Sub

Sub TESTEST()

    With wshBaseHours
        Dim lastRow As Long, lastResultRow As Long, ResultRow As Long
        lastRow = .Range("A999999").End(xlUp).row 'Last BaseHours Row
        If lastRow < 3 Then Exit Sub 'Nothing to filter
        Application.ScreenUpdating = False
        On Error Resume Next
        .Names("Criterial").Delete
        On Error GoTo 0
        'Advanced Filter applied to BaseHours
        .Range("A2:Q" & lastRow).AdvancedFilter xlFilterCopy, _
            CriteriaRange:=.Range("R2:W3"), _
            CopyToRange:=.Range("Y2:AL2"), _
            Unique:=True
        lastResultRow = .Range("Y999999").End(xlUp).row
        If lastResultRow < 4 Then GoTo NoSort
        With .Sort
            .SortFields.Clear
            .SortFields.Add Key:=wshBaseHours.Range("Y3"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On TEC_ID
            .SortFields.Add Key:=wshBaseHours.Range("Z3"), _
                SortOn:=xlSortOnValues, _
                Order:=xlAscending, _
                DataOption:=xlSortNormal 'Sort Based On Date
            .SetRange wshBaseHours.Range("Y3:AL" & lastResultRow) 'Set Range
            .Apply 'Apply Sort
         End With
NoSort:
    End With
End Sub
