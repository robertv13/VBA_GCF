Option Explicit

Public startTime As Double
Public previousCellAddress As Variant

Private Sub Workbook_Open()

    'Le serveur est-il disponible ?
    If Fn_Is_Server_Available() = False Then
        MsgBox "Le serveur (P:\) ne semble pas accessible" & vbNewLine & vbNewLine & _
                "Veuillez vérifier la disponibilité de ce dernier", vbCritical, "Le serveur n'est pas disponible"
        Application.Quit
    End If
    
    Dim rootPath As String
    Call Set_Root_Path(rootPath)
    wshAdmin.Range("F5").value = rootPath
    
    'Test pour valider que le serveur est accessible - 2024-09-24 @ 17:42
    Dim isServerUp As Boolean
    isServerUp = Fn_Check_Server_Access(rootPath)

    'Vérification si le chemin est accessible
    If isServerUp = False Then
        MsgBox "Le répertoire principal n'est pas accessible." & vbNewLine & vbNewLine & _
               "Veuillez vérifier votre connexion au serveur SVP", vbCritical, rootPath
        Exit Sub
    End If

    'Création d'un fichier qui indique de l'utilisateur utilise l'application
    Call Create_User_Active_File
    
    'Log activity
    Dim startTime As Double: startTime = Timer: Call Log_Record("***** Début d'une nouvelle session (Workbook_Open) *****", 0)
    
    Application.ScreenUpdating = False
    
    'Call the BackupMasterFile (GCF_BD_MASTER.xlsx) macro at each application startup
    Call BackupMasterFile
    
    Call Hide_Dev_Shapes_Based_On_Username
    
    Application.ScreenUpdating = True
    
    Call Write_Info_On_Main_Menu
    
    Application.ScreenUpdating = False
    
    wshMenu.Activate
    wshMenu.Range("A1").value = wshAdmin.Range("NomEntreprise").value
    
    'Protection de la feuille wshMenu
    With wshMenu
        .Protect UserInterfaceOnly:=True
        .EnableSelection = xlUnlockedCells '2024-08-21 @06:33
    End With
    
'    Call Slide_In_All_Menu_Options

    Dim wb As Workbook: Set wb = ActiveWorkbook
    wb.Application.Calculation = xlCalculationAutomatic
   
    Dim ws As Worksheet
    Application.DisplayAlerts = False  'Désactive les messages de confirmation
    For Each ws In wb.Worksheets
        If InStr(ws.CodeName, "wsh") <> 1 And InStr(ws.CodeName, "Feuil") = 1 Then
            ws.Delete
        End If
    Next ws
    Application.DisplayAlerts = True  ' Désactive les messages de confirmation
    
    Application.ScreenUpdating = True

    'Cleaning memory - 2024-07-01 @ 09:34
    Set wb = Nothing
    Set ws = Nothing
    
    Call Log_Record("ThisWorkbook:Workbook_Open", startTime)
    
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    Cancel = True
    ufExitDisable.show

End Sub

'Fonction pour vérifier si un fichier ou un dossier existe
Private Function Fn_Chemin_Existe(ByVal chemin As String) As Boolean

    On Error Resume Next
    Fn_Chemin_Existe = (Dir(chemin) <> "")
    On Error GoTo 0
    
End Function

Sub BackupMasterFile()

    Dim startTime As Double: startTime = Timer: Call Log_Record("modAppli:BackupMasterFile", 0)
    
    Application.ScreenUpdating = False
    
    'Open the master file
    Dim masterWorkbook As Workbook
    On Error GoTo MASTER_NOT_AVAILABLE
    Set masterWorkbook = Workbooks.Open(wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & _
                            "GCF_BD_MASTER.xlsx")
    On Error GoTo 0
    
    'Get the current date and time in the format YYYYMMDD_HHMMSS
    Dim currentDateAndTime As String
    currentDateAndTime = Format$(Now, "YYYYMMDD_HHMMSS")

    'Create the backup file name
    Dim backupFileName As String
    backupFileName = Left(masterWorkbook.name, InStrRev(masterWorkbook.name, ".") - 1) & "_" & currentDateAndTime & ".xlsx"

    'Define the backup file path (same directory as the master file)
    Dim backupFilePath As String
    backupFilePath = masterWorkbook.path & "\" & backupFileName

    'Save a copy of the master workbook with the new name
    masterWorkbook.SaveCopyAs backupFilePath

    'Close the master workbook
    masterWorkbook.Close SaveChanges:=False

'    'Optional: Notify the user
'    MsgBox "Backup created: " & vbNewLine & vbNewLine & "'" & backupFilePath & "'"

    Application.ScreenUpdating = True

    'Cleaning memory - 2024-07-01 @ 09:34
    Set masterWorkbook = Nothing
    
    Call Log_Record("modAppli:BackupMasterFile", startTime)
    Exit Sub

MASTER_NOT_AVAILABLE:
    MsgBox "Le fichier GCF_MASTER.xlsx ne peut être accédé..." & vbNewLine & vbNewLine & _
            "Le fichier nécessite une réparation manuelle", _
            vbCritical, _
            "Situation anormale"
    Application.Quit

End Sub

Sub Create_User_Active_File()

    Dim userName As String
    userName = Fn_Get_Windows_Username
    
    Dim traceFilePath As String
    traceFilePath = wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & "Actif_" & userName & ".txt"
    
    Dim fileNumber As Integer
    fileNumber = FreeFile
    
    On Error GoTo Error_Handling
    Open traceFilePath For Output As fileNumber
    On Error GoTo 0
    
    Print #fileNumber, "Utilisateur " & userName & " a ouvert l'application à " & Now
    Close fileNumber
    
    Exit Sub

Error_Handling:
    MsgBox "Erreur en tentant d'accéder le répertoire" & vbNewLine & vbNewLine & _
            "'" & traceFilePath & "'" & vbNewLine & vbNewLine & _
            "Erreur # " & Err.Number & " - " & Err.Description, vbCritical, "Accès à " & traceFilePath

End Sub