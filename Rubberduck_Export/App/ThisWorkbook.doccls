Option Explicit

Public startTime As Double
Public previousCellAddress As Variant

Private Sub Workbook_Open()

    Call Output_Timer_Results("message:N E W  session  has  started", 0)
    
    Application.ScreenUpdating = False
    
    Call Set_Root_Path
    
    Debug.Assert wshAdmin.Range("F5").value <> ""
    
    'Call the BackupMasterFile (GCF_BD_MASTER.xlsx) macro
    Call BackupMasterFile
    
    Call Hide_Dev_Shapes_Based_On_Username
    
    With wshMenu.Range("A34")
        .Font.Size = 9
        .Font.Color = vbBlack
        .value = "Version: " & APP_VERSION_NO
    End With
    
    With wshMenu.Range("A35")
        .Font.Size = 9
        .Font.Color = vbRed
        .value = "Utilisateur: " & Environ("Username")
    End With
    
    wshMenu.Activate
    wshMenu.Unprotect
    wshMenu.Range("A1").value = wshAdmin.Range("NomEntreprise").value
'    wshMenu.Protect UserInterfaceOnly:=True RMV - 2024-07-21
    
    Call Slide_In_All_Menu_Options

    Dim wb As Workbook: Set wb = ActiveWorkbook
    wb.Application.Calculation = xlCalculationManual
   
'    Call Import_Minimum_From_External_DB '2024-03-11 @ 09:56
    
    Application.ScreenUpdating = True

    'Cleaning memory - 2024-07-01 @ 09:34 memory - 2024-07-01 @ 09:34
    Set wb = Nothing
    
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    Cancel = True
    ufExitDisable.show

End Sub

Sub BackupMasterFile()

    Dim timerStart As Double: timerStart = Timer: Call Start_Timer("modAppli:BackupMasterFile()")
    
    Application.ScreenUpdating = False
    
    'Open the master file
    Dim masterWorkbook As Workbook
    Set masterWorkbook = Workbooks.Open(wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & _
                            "GCF_BD_MASTER.xlsx")
    
    'Get the current date and time in the format YYYYMMDD_HHMMSS
    Dim currentDateAndTime As String
    currentDateAndTime = Format$(Now, "YYYYMMDD_HHMMSS")

    'Create the backup file name
    Dim backupFileName As String
    backupFileName = Left(masterWorkbook.name, InStrRev(masterWorkbook.name, ".") - 1) & "_" & currentDateAndTime & ".xlsx"

    'Define the backup file path (same directory as the master file)
    Dim backupFilePath As String
    backupFilePath = masterWorkbook.path & "\" & backupFileName

    'Save a copy of the master workbook with the new name
    masterWorkbook.SaveCopyAs backupFilePath

    'Close the master workbook
    masterWorkbook.Close saveChanges:=False

'    'Optional: Notify the user
'    MsgBox "Backup created: " & vbNewLine & vbNewLine & "'" & backupFilePath & "'"

    Application.ScreenUpdating = True

    'Cleaning memory - 2024-07-01 @ 09:34
    Set masterWorkbook = Nothing
    
    Call Output_Timer_Results("modAppli:BackupMasterFile()", timerStart)

End Sub


