Option Explicit

'Ces variables sont disponibles partout dans l'application
Public startTime As Double
Public previousCellAddress As Variant

Private Sub Workbook_Open()

    DoEvents
    
    'Le serveur est-il disponible ?
    If Fn_Is_Server_Available() = False Then
        MsgBox "Le serveur (P:\) ne semble pas accessible" & vbNewLine & vbNewLine & _
                "Veuillez vérifier la disponibilité de ce dernier", vbCritical, "Le serveur n'est pas disponible"
        Application.Quit
    End If
    
    Dim rootPath As String
    Call Set_Root_Path(rootPath)
    wshAdmin.Range("F5").value = rootPath
    
    'Test pour valider que le serveur est accessible - 2024-09-24 @ 17:42
    Dim isServerUp As Boolean
    isServerUp = Fn_Check_Server_Access(rootPath)

    'Vérification si le chemin est accessible
    If isServerUp = False Then
        MsgBox "Le répertoire principal n'est pas accessible." & vbNewLine & vbNewLine & _
               "Veuillez vérifier votre connexion au serveur SVP", vbCritical, rootPath
        Exit Sub
    End If

    DoEvents
    
    'Log initial activity
    Dim startTime As Double: startTime = Timer: Call Log_Record("***** Début d'une nouvelle session (ThisWorkbook:Workbook_Open) *****", 0)
    
    'Création d'un fichier qui indique de l'utilisateur utilise l'application
    Call CreateUserActiveFile
    
    Call SetupUserDateFormat
    
'    Application.ScreenUpdating = False
    
    'Call the BackupMasterFile (GCF_BD_MASTER.xlsx) macro at each application startup
    Call BackupMasterFile
    
    Call HideDevShapesBasedOnUsername
    
    Call WriteInfoOnMainMenu
    
    wshMenu.Activate
    wshMenu.Range("A1").value = wshAdmin.Range("NomEntreprise").value
    
    'Protection de la feuille wshMenu
    With wshMenu
        .Protect UserInterfaceOnly:=True
        .EnableSelection = xlNoRestrictions '2024-10-14 @ 11:28
    End With
    
    Dim wb As Workbook: Set wb = ActiveWorkbook
    wb.Application.Calculation = xlCalculationAutomatic
   
    'Efface les feuilles dont le codename n'est pas wsh* -ET- dont le nom commence par 'Feuil'
    Dim ws As Worksheet
    Application.DisplayAlerts = False
    For Each ws In wb.Worksheets
        If InStr(ws.CodeName, "wsh") <> 1 And InStr(ws.CodeName, "Feuil") = 1 Then
            ws.Delete
        End If
    Next ws
    Application.DisplayAlerts = True
    
'    Application.ScreenUpdating = True

    'Libérer la mémoire
    Set wb = Nothing
    Set ws = Nothing
    
    Call Log_Record("ThisWorkbook:Workbook_Open", startTime)
    
End Sub

Sub CreateUserActiveFile()

    DoEvents
    
    Dim startTime As Double: startTime = Timer: Call Log_Record("ThisWorkbook:Create_User_Active_File", 0)
    
    Dim userName As String
    userName = Fn_Get_Windows_Username
    
    Dim traceFilePath As String
    traceFilePath = wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & "Actif_" & userName & ".txt"
    
    Dim FileNumber As Integer
    FileNumber = FreeFile
    
    On Error GoTo Error_Handling
    Open traceFilePath For Output As FileNumber
    On Error GoTo 0
    
    Print #FileNumber, "Utilisateur " & userName & " a ouvert l'application à " & Now
    Close FileNumber
    
    Call Log_Record("ThisWorkbook:Create_User_Active_File", startTime)
    
    Exit Sub

Error_Handling:
    MsgBox "Erreur en tentant d'accéder le répertoire" & vbNewLine & vbNewLine & _
            "'" & traceFilePath & "'" & vbNewLine & vbNewLine & _
            "Erreur # " & Err.Number & " - " & Err.Description, vbCritical, "Accès à " & traceFilePath

End Sub

Sub BackupMasterFile()

    DoEvents

    Dim startTime As Double: startTime = Timer: Call Log_Record("ThisWorkbook:BackupMasterFile", 0)
    
    On Error GoTo MASTER_NOT_AVAILABLE
    
'    Application.ScreenUpdating = False
    
    'Chemin source (fichier principal) et destination (sauvegarde)
    Dim masterFilePath As String
    masterFilePath = wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & "GCF_BD_MASTER.xlsx"
    
    Dim backupFilePath As String
    backupFilePath = wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & _
                     "GCF_BD_MASTER_" & Format$(Now, "YYYYMMDD_HHMMSS") & ".xlsx"
    
    'Créer directement une copie du fichier sans ouvrir Excel
    FileCopy masterFilePath, backupFilePath

    Call Log_Record("ThisWorkbook:BackupMasterFile", startTime)
    
    Exit Sub
    
'    'Open the master file
'    Dim masterWorkbook As Workbook
'    On Error GoTo MASTER_NOT_AVAILABLE
'    Set masterWorkbook = Workbooks.Open(wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & _
'                            "GCF_BD_MASTER.xlsx")
'    If Err.Number <> 0 Then
'        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
'    End If
'    On Error GoTo 0
'
'    'Get the current date and time in the format YYYYMMDD_HHMMSS
'    Dim currentDateAndTime As String
'    currentDateAndTime = Format$(Now, "YYYYMMDD_HHMMSS")

'    'Create the backup file name
'    Dim backupFileName As String
'    backupFileName = Left(masterWorkbook.Name, InStrRev(masterWorkbook.Name, ".") - 1) & "_" & Format$(Now, "YYYYMMDD_HHMMSS") & ".xlsx"
'
'    'Define the backup file path (same directory as the master file)
'    Dim backupFilePath As String
'    backupFilePath = masterWorkbook.path & "\" & backupFileName
'
'    'Save a copy of the master workbook with the new name
'    On Error Resume Next
'    masterWorkbook.SaveCopyAs backupFilePath
'    If Err.Number <> 0 Then
'        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
'    End If
'
'    'Close the master workbook
'    masterWorkbook.Close SaveChanges:=False
'    If Err.Number <> 0 Then
'        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
'    End If
'    On Error GoTo 0

'    Application.ScreenUpdating = True

'    'Libérer la mémoire
'    Set masterWorkbook = Nothing
    
    Call Log_Record("ThisWorkbook:BackupMasterFile", startTime)

    Exit Sub

MASTER_NOT_AVAILABLE:
    MsgBox "Le fichier GCF_MASTER.xlsx ne peut être accédé..." & vbNewLine & vbNewLine & _
            "Le fichier nécessite une réparation manuelle", _
            vbCritical, _
            "Situation anormale (" & Err.Number & " " & Err.Description & ")"
    Application.Quit

End Sub

Sub BackupMasterFile_OK()

    DoEvents

    Dim startTime As Double: startTime = Timer: Call Log_Record("ThisWorkbook:BackupMasterFile", 0)
    
    Application.ScreenUpdating = False
    
    'Open the master file
    Dim masterWorkbook As Workbook
    On Error GoTo MASTER_NOT_AVAILABLE
    Set masterWorkbook = Workbooks.Open(wshAdmin.Range("F5").value & DATA_PATH & Application.PathSeparator & _
                            "GCF_BD_MASTER.xlsx")
    If Err.Number <> 0 Then
        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
    End If
    On Error GoTo 0
    
'    'Get the current date and time in the format YYYYMMDD_HHMMSS
'    Dim currentDateAndTime As String
'    currentDateAndTime = Format$(Now, "YYYYMMDD_HHMMSS")

    'Create the backup file name
    Dim backupFileName As String
    backupFileName = Left(masterWorkbook.Name, InStrRev(masterWorkbook.Name, ".") - 1) & "_" & Format$(Now, "YYYYMMDD_HHMMSS") & ".xlsx"

    'Define the backup file path (same directory as the master file)
    Dim backupFilePath As String
    backupFilePath = masterWorkbook.path & "\" & backupFileName

    'Save a copy of the master workbook with the new name
    On Error Resume Next
    masterWorkbook.SaveCopyAs backupFilePath
    If Err.Number <> 0 Then
        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
    End If

    'Close the master workbook
    masterWorkbook.Close SaveChanges:=False
    If Err.Number <> 0 Then
        Call Log_Record("   ThisWorkbook:BackupMasterFile - ERREUR - " & Err.Number & " - " & Err.Description, -1)
    End If
    On Error GoTo 0

    Application.ScreenUpdating = True

    'Libérer la mémoire
    Set masterWorkbook = Nothing
    
    Call Log_Record("ThisWorkbook:BackupMasterFile", startTime)

    Exit Sub

MASTER_NOT_AVAILABLE:
    MsgBox "Le fichier GCF_MASTER.xlsx ne peut être accédé..." & vbNewLine & vbNewLine & _
            "Le fichier nécessite une réparation manuelle", _
            vbCritical, _
            "Situation anormale (" & Err.Number & " " & Err.Description & ")"
    Application.Quit

End Sub

Sub SetupUserDateFormat()

    DoEvents
    
    Dim startTime As Double: startTime = Timer: Call Log_Record("ThisWorkbook:Setup_UserDateFormat", 0)

    Dim userDateFormat As String
    
    Select Case Fn_Get_Windows_Username
        Case "GuillaumeCharron", "Guillaume"
            userDateFormat = "dd/mm/yy"
        Case "vgervais", "user"
            userDateFormat = "dd/mm/yyyy"
        Case "Annie"
            userDateFormat = "yyyy/mm/dd"
        Case "Robert M. Vigneault", "robertmv"
            userDateFormat = "dd/mm/yyyy"
        Case Else
            userDateFormat = "dd/mm/yyyy"
    End Select

    wshAdmin.Range("B1").value = userDateFormat
    
    Call Log_Record("ThisWorkbook:Setup_UserDateFormat", startTime)
    
End Sub

Private Sub Workbook_BeforeClose(Cancel As Boolean)
    
    Cancel = True
    ufExitDisable.show

End Sub

'Private Sub Workbook_SheetActivate(ByVal Sh As Object) '2024-11-22 @ 15:44
'
'    MsgBox "Évènement 'Workbook_SheetActivate' " & Sh.Name
'
'End Sub

