Option Explicit

Public previousCellAddress As Variant

Private Sub Worksheet_Activate()

    Dim startTime As Double: startTime = Timer: Call Log_Record("wshDEB_Saisie:Worksheet_Activate", 0)
    
    Application.ScreenUpdating = False
    Application.EnableEvents = False
    
    'Import transactions from MASTER file
    Call DEB_Trans_Import_All
    Call GL_Trans_Import_All
    Call Fournisseur_List_Import_All
    
    'Set the zoom factor to 95% when this worksheet is activated
    ActiveWindow.Zoom = 95
    
    Me.Application.Calculation = xlCalculationAutomatic

    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("DEB_Saisie")
    
    'Hide column A & B
    With ws
        .Unprotect
        .Range("A:B").EntireColumn.Hidden = True
    End With
    
    Call SetTabOrder(ws)
    
    Call DEB_Saisie_Clear_All_Cells
    
    With ws
        .Protect UserInterfaceOnly:=True
        .EnableSelection = xlUnlockedCells
    End With
    
    Application.ScreenUpdating = True
    Application.EnableEvents = True
    
    With ws
        .Range("C3").Activate
        .Range("F4").Select
        previousCellAddress = .Range("F4").Address
    End With

    'Cleaning memory - 2024-07-01 @ 09:34
    Set ws = Nothing
    
    Call Log_Record("wshDEB_Saisie:Worksheet_Activate()", startTime)

End Sub

Private Sub Worksheet_SelectionChange(ByVal Target As Range)

    If previousCellAddress <> "" Then
        Range(previousCellAddress).Interior.Color = xlNone
    End If
    
    'Type is selected
    If Not Intersect(Target, Range("F4")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Date is selected
    If Not Intersect(Target, Range("O4")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Description is selected
    If Not Intersect(Target, Range("$F$6:$K$6")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Reference is selected
    If Not Intersect(Target, Range("M6")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Total Amount is selected
    If Not Intersect(Target, Range("O6")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Account is selected
    If Not Intersect(Target, Range("F9:F23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
        wshDEB_Saisie.Range("B4").value = Target.Address
    End If
    
    'Tax code is selected (TPS/TVQ is the default)
    If Not Intersect(Target, Range("H9:H23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
        Target.value = "TPS/TVQ"
    End If
    
    'Amount is selected (Amount to distribute by default)
    If Not Intersect(Target, Range("I9:I23")) Is Nothing Then
        If Target.value = "" Then
            Application.EnableEvents = False
            Dim suggestedAmount As Double
            suggestedAmount = wshDEB_Saisie.Range("O6").value - wshDEB_Saisie.Range("I26").value
            If suggestedAmount > 0 Then
                Call DEB_Suggest_Amount(Target.Row, suggestedAmount)
            End If
            Application.EnableEvents = True
        End If
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
   
   'Force GST/TPS calculation with a formula, but also accept user input
    If Not Intersect(Target, Range("J9:J23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Force PST/TVQ calculation with a formula, but also accept user input
    If Not Intersect(Target, Range("K9:K23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Credit GST/TPS
    If Not Intersect(Target, Range("L9:L23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Credit PST/TVQ
    If Not Intersect(Target, Range("M9:M23")) Is Nothing Then
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If

    'Calculate the NET amount (Expense), but also accept user input
    If Not Intersect(Target, Range("N9:O23")) Is Nothing Then
'        If Range("I" & Target.row).value <> 0 Then
'            Range("N" & Target.row).formula = "=round(RC[-5]-rc[-2]-rc[-1],2)"
'        End If
        Target.Interior.Color = HIGHLIGHT_COLOR
    End If
    
    'Save the current cell Address
    previousCellAddress = Target.Address
    
End Sub

Private Sub Worksheet_Change(ByVal Target As Range)
    
    On Error GoTo ErrorHandler
    
    Application.EnableEvents = False
    
    Call Process_Change(Target)
    
    Application.EnableEvents = True
    Exit Sub
    
ErrorHandler:
    Application.EnableEvents = True 'Ensure events are re-enabled if an error occurs
    MsgBox "Erreur " & Err.Number & ": " & Err.Description, vbCritical, "Erreur"

End Sub

Private Sub Process_Change(ByVal Target As Range)

    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("DEB_Saisie")
    
    Dim startCell As Range: Set startCell = ws.Range("E9")
    
    Dim GLRange As Range: Set GLRange = ws.Range(startCell.Offset(0, 0), startCell.Offset(14, 0))
    Dim amountRange As Range: Set amountRange = ws.Range(startCell.Offset(0, 2), startCell.Offset(14, 2))
    Dim netAmountRange As Range: Set netAmountRange = ws.Range(startCell.Offset(0, 7), startCell.Offset(14, 7))
    
    Dim fullDate As Variant
    Dim amount As Currency
    Dim gst As Currency, pst As Currency
    Dim gstCredit As Currency, pstCredit As Currency
    Dim netAmount As Currency
    
    'Date has changed
    If Not Application.Intersect(Target, Range("O4")) Is Nothing Then
        'Temporarily disable events to prevent infinite loop
        Application.EnableEvents = False
        
        'Try to convert the input to a complete valid date
        fullDate = Fn_Complete_Date(CStr(Target.text))
        
        'Update the cell with the full date, if valid
        If fullDate <> "Invalid Date" Then
            Target.value = fullDate
        Else
            Call MsgBoxInvalidDate
            Application.EnableEvents = False
            Target.ClearContents
            Application.EnableEvents = True
            Application.GoTo Range(Target.Address)
        End If
        Application.EnableEvents = True
    End If
    
    'Account has changed
    If Not Intersect(Target, GLRange) Is Nothing Then
        If Target.value <> "" Then
            Application.EnableEvents = False
            wshDEB_Saisie.Range("Q" & Target.Row).value = _
                Fn_GetGL_Code_From_GL_Description(Target.value)
            Application.EnableEvents = True
        End If
    End If
    
    'Amount has changed
    If Not Intersect(Target, amountRange) Is Nothing Then
        'If the user changes the Amount cell
        Dim cell As Range
    For Each cell In Target
            Debug.Print cell.Address & " = " & cell.value
            If cell.value = 0 Then
                cell.Offset(0, 1).value = "" 'Clear GST
                cell.Offset(0, 2).value = "" 'Clear PST
                cell.Offset(0, 3).value = "" 'Clear GST_Credit
                cell.Offset(0, 4).value = "" 'Clear PST_Credit
                cell.Offset(0, 5).value = "" 'Clear netAmount
                'Move focus to netAmount
                If previousCellAddress <> "" Then
                    Debug.Print "Previous cell address = " & previousCellAddress
                    Range(previousCellAddress).Interior.Color = xlNone
                End If
                cell.Offset(0, 5).Select
            Else
                Debug.Print "Amount - " & wshDEB_Saisie.Range("O4").value & " " & wshDEB_Saisie.Range("H" & Target.Row).value & " " & _
                    Target.value & " " & gst & " " & pst & " " & gstCredit & " " & pstCredit & " " & _
                    netAmount
                'Calculate GST, PST, GST_Credit, PST_Credit based on the Amount
                Call Calculate_GST_PST_And_Credits(wshDEB_Saisie.Range("O4").value, _
                                                   wshDEB_Saisie.Range("H" & Target.Row).value, _
                                                   Target.value, _
                                                   gst, pst, gstCredit, pstCredit, _
                                                   netAmount)

                Application.EnableEvents = False
                cell.Offset(0, 1).value = gst
                cell.Offset(0, 2).value = pst
                cell.Offset(0, 3).value = gstCredit
                cell.Offset(0, 4).value = pstCredit
                cell.Offset(0, 5).value = netAmount
                Application.EnableEvents = True
                'Move to the next line
                Debug.Print "Previous cell address = " & previousCellAddress
                If previousCellAddress <> "" Then
                    Range(previousCellAddress).Interior.Color = xlNone
                End If
                cell.Offset(1, -4).Select
            End If
        Next cell
    ElseIf Not Intersect(Target, netAmountRange) Is Nothing Then
        'If the user changes the netAmount cell
        Dim cellNet As Range
        For Each cellNet In Target
            Debug.Print cellNet.Address & " = " & cellNet.value
            If cellNet.value <> "" Then
                amount = 0
                Debug.Print "netAmount - " & wshDEB_Saisie.Range("O4").value & " " & wshDEB_Saisie.Range("H" & Target.Row).value & " " & _
                    amount & " " & gst & " " & pst & " " & gstCredit & " " & pstCredit & " " & _
                    Target.value
                'Calculate GST, PST, GST_Credit, PST_Credit based on the Amount
                Call Calculate_GST_PST_And_Credits(wshDEB_Saisie.Range("O4").value, _
                                                   wshDEB_Saisie.Range("H" & Target.Row).value, _
                                                   amount, _
                                                   gst, pst, gstCredit, pstCredit, _
                                                   Target.value)

                'Calculate Amount, GST, PST, GST_Credit, PST_Credit based on the netAmount
                Application.EnableEvents = False
                Debug.Print cellNet.Address
                cellNet.Offset(0, -5).value = amount
                cellNet.Offset(0, -4).value = gst
                cellNet.Offset(0, -3).value = pst
                cellNet.Offset(0, -2).value = gstCredit
                cellNet.Offset(0, -1).value = pstCredit
                Application.EnableEvents = True
                'Move to the next line
                cellNet.Offset(1, -9).Select
            End If
        Next cellNet
    End If
    
    'Force TAB order after a cell has been changed - 2024-08-25 @ 10:35
    If Not Intersect(Target, Me.Range("F4")) Is Nothing Then
        Me.Range("O4").Select
    ElseIf Not Intersect(Target, Me.Range("O4")) Is Nothing Then
        Me.Range("F6").Select
    ElseIf Not Intersect(Target, Me.Range("F6")) Is Nothing Then
        Me.Range("M6").Select
    ElseIf Not Intersect(Target, Me.Range("M6")) Is Nothing Then
        Me.Range("O6").Select
    End If

    'Cleanup - 2024-07-14 @ 08:26
    Set amountRange = Nothing
    Set cell = Nothing
    Set cellNet = Nothing
    Set GLRange = Nothing
    Set netAmountRange = Nothing
    Set startCell = Nothing
    Set ws = Nothing
    
End Sub

Sub DEB_Suggest_Amount(rowNumber As Long, suggestedAmount As Double)

    Dim ws As Worksheet: Set ws = ThisWorkbook.Sheets("DEB_Saisie")
    
    Application.EnableEvents = False
    
    Dim targetCell As Range: Set targetCell = ws.Cells(rowNumber, 5 + 4) ' Assuming E9 is the starting cell
    
    targetCell.value = suggestedAmount
    
    Application.EnableEvents = True
    
    Call Process_Change(targetCell)
    
End Sub
